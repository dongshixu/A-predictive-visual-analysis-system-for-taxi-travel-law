from __future__ import unicode_literals
from django.shortcuts import HttpResponse
from django.http import JsonResponse
from django.shortcuts import render
from django.views.decorators.csrf import csrf_exempt
import json
import pymysql
import time
import os
import heapq
import math
import tensorflow as tf
from .db import DB
from math import radians, cos, sin, asin, sqrt, degrees, atan2


def jsonres(data=None, result=True, reason=None):
    res = dict()
    if result:
        if data:
            res['data'] = data
            res['code'] = 0
            res['msg'] = 'ok'
            return JsonResponse(res)
        else:
            res['code'] = -1
            res['msg'] = 'no data'
            return JsonResponse(res)
    else:
        res['code'] = 1
        res['msg'] = reason or 'error'
    return JsonResponse(res)


def show_car(request):
    if request.method == 'POST':
        req = json.loads(request.body)
        res = test_1(req)
        return jsonres(res)
    else:
        return jsonres(result=False)


def test_traj(request):
    if request.method == 'POST':
        req = json.loads(request.body)
        res = test_2(req)
        return jsonres(res)
    else:
        return jsonres(result=False)


def change_flow(request):
    if request.method == 'POST':
        req = json.loads(request.body)
        res = test_3(req)
        return jsonres(res)
    else:
        return jsonres(result=False)


def change_speed(request):
    if request.method == 'POST':
        req = json.loads(request.body)
        res = test_3_1(req)
        return jsonres(res)
    else:
        return jsonres(result=False)


def read_road(request):
    if request.method == 'POST':
        req = json.loads(request.body)
        print(req)
        res = test_4_1()
        return jsonres(res)
    else:
        return jsonres(result=False)


def ouput_flow(request):
    if request.method == 'POST':
        req = json.loads(request.body)
        res = test_4_2(req)
        return jsonres(res)
    else:
        return jsonres(result=False)


def ouput_taxi_time(request):
    if request.method == 'POST':
        req = json.loads(request.body)
        res = test_5(req)
        return jsonres(res)
    else:
        return jsonres(result=False)


def ouput_taxi(request):
    if request.method == 'POST':
        req = json.loads(request.body)
        res = test_5_1(req)
        return jsonres(res)
    else:
        return jsonres(result=False)


def output_flow_TM(request):   # 计算一个小时每隔十分钟的流量和速度
    if request.method == 'POST':
        req = json.loads(request.body)
        res = test_6(req)
        return jsonres(res)
    else:
        return jsonres(result=False)


def output_avefee(request):   # 计算一个小时每隔十分钟的流量和速度
    if request.method == 'POST':
        req = json.loads(request.body)
        res = test7(req)
        return jsonres(res)
    else:
        return jsonres(result=False)


def ouputsearchroad(request):
    if request.method == 'POST':
        req = json.loads(request.body)
        # print(req)
        pp = test8(req)
        # test8(req)
        return jsonres(pp)
    else:
        return jsonres(result=False)


def taxistatistic(request):
    if request.method == 'POST':
        req = json.loads(request.body)
        pp = test8_1(req)
        return jsonres(pp)
    else:
        return jsonres(result=False)


def ouputtaxiname(request):
    if request.method == 'POST':
        req = json.loads(request.body)
        b = int(req)
        path = 'D:\\DATA\\taxi_in_wenzhou\\201401TRK\\TRK201401%02d' % b
        pp = find_filename(path, [])
        return jsonres(pp)
    else:
        return jsonres(result=False)


def experiment(request):
    if request.method == 'POST':
        req = json.loads(request.body)
        print(req)
        return jsonres(req)
    else:
        return jsonres(result=False)


'''
执行函数
'''


def test_1(A):
    a = []
    b = []
    c = []
    aa = []
    e = dict()
    list_taxi = []
    a.append(int(A['y']))
    a.append(A['z'])
    a.append(A['x'])
    mysql = DB()
    results = mysql.get_mysql("select * from new_taxitraj201401%02d  where road_id = %d and time = %d" % (a[2], a[0], a[1]))
    aw = mysql.get_mysql("select * from load_track_detail where id = %d" % a[0])
    for re in aw:
        if re.count(None) == 0:
            for i in range(1, 9):
                aa.append(float(re[i]))
        elif re.count(None) == 2:
            for i in range(1, 7):
                aa.append(float(re[i]))
        else:
            for i in range(1, 5):
                aa.append(float(re[i]))
    if results:
        b.append(results[0][1])
        c.append(list(results[0]))
        for res in results:
            if res[1] not in b:
                c.append(list(res))
                b.append(res[1])
        # print(len(c), c)
        for number in c:
            d = []
            json_taxi = dict()
            d.append(float(number[6]))
            d.append(float(number[5]))
            json_taxi['car_no'] = number[1]
            json_taxi['speed'] = number[2]
            json_taxi["latlng"] = d
            list_taxi.append(json_taxi)
        e["taxi_number"] = len(c)
        e["road"] = aa
        e["detail"] = list_taxi
    else:
        e["taxi_number"] = 0
        e["road"] = aa
        e["detail"] = 0
    return e


def test_2(A):
    # A11 = int(A['x'])
    # B11 = int(A['y'])
    mysql = DB()
    res_road = mysql.get_mysql("select * from load_track_detail")
    # res_carflow = mysql.get_mysql("SELECT * FROM carflow2014%04d" % A11 +" WHERE time_minute = %d" % B11)
    # x = []
    # for Q in res_carflow:
    #     x.append(Q[2])
    Road_set = []
    for R in res_road:
        a = dict()
        b = dict()
        c = dict()
        e = dict()
        f = dict()
        d = []
        if R.count(None) == 4:
            a["lat"] = R[1]
            a["lng"] = R[2]
            b["lat"] = R[3]
            b["lng"] = R[4]
            d.append(a)
            d.append(b)
        elif R.count(None) == 2:
            a["lat"] = R[1]
            a["lng"] = R[2]
            b["lat"] = R[3]
            b["lng"] = R[4]
            c["lat"] = R[5]
            c["lng"] = R[6]
            d.append(a)
            d.append(b)
            d.append(c)
        else:
            a["lat"] = R[1]
            a["lng"] = R[2]
            b["lat"] = R[3]
            b["lng"] = R[4]
            c["lat"] = R[5]
            c["lng"] = R[6]
            e["lat"] = R[7]
            e["lng"] = R[8]
            d.append(a)
            d.append(b)
            d.append(c)
            d.append(e)
        f["R"] = d
        Road_set.append(f)
    # Road_set.append(x)
    # print(len(Road_set), Road_set)
    return Road_set


'''输出所选一段时间内的流量信息'''


def test_3(A):
    A1 = int(A['x'])
    B = int(A['y'])
    C = int(A['z'])
    # res_test_2 = test_2(A)
    mysql = DB()
    flow_set = []
    for i in range(B, C+1):
        res_flow = mysql.get_mysql("select * from carflow2014%04d" % A1 +" where time_minute = %d" % i)
        a = []
        for e in res_flow:
            a.append(e[2])
        flow_set.append(a)
    # flow_set.append(res_test_2)
    # print(flow_set)
    return flow_set


'''输出所选一段时间内的速度信息'''


def test_3_1(A):
    # print(A)
    A1 = int(A['x'])
    B = int(A['y'])
    C = int(A['z'])
    # res_test_2 = test_2(A)
    mysql = DB()
    flow_set = []
    for i in range(B, C+1):
        res_flow = mysql.get_mysql("select * from newavspeed2014%04d" % A1 +" where time_minute = %d" % i)
        a = []
        for e in res_flow:
            a.append(e[2])
        flow_set.append(a)
    # flow_set.append(res_test_2)
    # print(len(flow_set))
    return flow_set


''' 根据选择道路输出一天中的流量test4_1输出所有路段供选择工具选择'''


def test_4_1():
    mysql = DB()
    res_road = mysql.get_mysql("select * from load_track_detail")
    Road_set = []
    for R in res_road:
        a = dict()
        b = dict()
        c = dict()
        e = dict()
        f = dict()
        d = []
        if R.count(None) == 4:
            a["lat"] = R[1]
            a["lng"] = R[2]
            b["lat"] = R[3]
            b["lng"] = R[4]
            d.append(a)
            d.append(b)
        elif R.count(None) == 2:
            a["lat"] = R[1]
            a["lng"] = R[2]
            b["lat"] = R[3]
            b["lng"] = R[4]
            c["lat"] = R[5]
            c["lng"] = R[6]
            d.append(a)
            d.append(b)
            d.append(c)
        else:
            a["lat"] = R[1]
            a["lng"] = R[2]
            b["lat"] = R[3]
            b["lng"] = R[4]
            c["lat"] = R[5]
            c["lng"] = R[6]
            e["lat"] = R[7]
            e["lng"] = R[8]
            d.append(a)
            d.append(b)
            d.append(c)
            d.append(e)
        f["R"] = d
        Road_set.append(f)
    return Road_set


def list_of_groups(init_list, childern_list_len):
    list_of_groups = zip(*(iter(init_list),) *childern_list_len)
    end_list = [list(i) for i in list_of_groups]
    count = len(init_list) % childern_list_len
    end_list.append(init_list[-count:]) if count != 0 else end_list
    return end_list


def test_4_2(A):  # 输出一天24小时的流量与速度
    mysql = DB()
    A1 = A['x']
    B = int(A['y'])
    a3 = []
    b3 = []
    x3 = []
    y3 = []
    aaa = []
    length = len(A1)
    for i in range(length):
        a = []
        b = []
        x = []
        y = []
        a2 = []
        b2 = []
        x2 = []
        y2 = []
        res_flow = mysql.get_mysql("select * from carflow201401%02d" % B + " where road_id = %d" % A1[i])
        res_speed = mysql.get_mysql("select * from newavspeed201401%02d" % B + " where road_id = %d" % A1[i])
        # res1 = mysql.get_mysql("select * from carflow20140101 where road_id = %d" % A[i])
        for q in range(len(res_flow)):
            a.append(res_flow[q][2])
            # b.append(res_flow[q][3])
            x.append(res_speed[q][2])
            # y.append(res_speed[q][3])
        a1 = list_of_groups(a, 60)
        # b1 = list_of_groups(b, 60)
        x1 = list_of_groups(x, 60)
        # print(x1)
        # y1 = list_of_groups(b, 60)
        for j in range(len(a1)):
            a2.append(sum(a1[j]))
            # b2.append(sum(b1[j]))

            temp = list(set(x1[j]))
            temp.sort()
            x2.append(temp[int(len(temp)/2)])
            # x2.append(int(sum(x1[j])/60))
            # if x1[j] == 0:
            #     x2.append(0)
            # else:
            #     x2.append(int(sum(x1[j])/len(x1[j])))
            # temp1 = list(set(y1[j]))
            # temp1.sort()
            # y2.append(temp1[int(len(temp1) / 2)])
        a3.append(a2)
        # b3.append(b3)
        x3.append(x2)
        # y3.append(y2)
    aaa.append(a3)
    # aaa.append(b3)
    aaa.append(x3)
    # print(x3)
    # aaa.append(y3)
    # print(aaa)
    return aaa


# def find_filename(path, A):
#     fs = os.listdir(path)
#     for f in fs:
#         pathTmp = os.path.join(path, f)
#         if os.path.isdir(pathTmp):
#             find_filename(pathTmp, A)
#         else:
#             A.append((os.path.basename(pathTmp))[:7])
#     return A


def test_5(X):
    a = int(X['x'])
    b = int(X['y'])
    # c = 'D:\\DATA\\taxi_in_wenzhou\\201401TRK\\TRK201401%02d' % a
    # A = find_filename(c, [])
    car_no = []
    last_res = []
    mysql = DB()
    res_5 = mysql.get_mysql("SELECT * FROM new_taxitraj201401%02d" % a + "  WHERE time = %d" % b)
    x11 = res_5[0]
    car_no.append(x11)
    # for i in range(len(A)):
    #     for Q in res_5:
    #         if A[i] == Q[1]:
    #             car_no.append(Q)
    #             break
    # print(len(res_5), len(car_no), len(A), car_no)
    for GTR in res_5:
        if GTR[1] != x11[1]:
            car_no.append(GTR)
            x11 = GTR
    for qwe in car_no:
        aa = dict()
        aa['car_name'] = qwe[1]
        aa['latlng'] = {'lat': float(qwe[6]), 'lng': float(qwe[5])}
        aa['speed'] = qwe[2]
        aa['passager'] = qwe[4]
        last_res.append(aa)
    # print(last_res)
    return last_res


def test_5_1(A):
    mysql = DB()
    a = A['x']
    b = int(A['y'])
    c = int(A['z'])
    d = int(A['k'])
    se_car = []
    se_res = mysql.get_mysql("SELECT * FROM new_taxitraj201401%02d" % d + "  WHERE car_no = %s and time between %s and %s", (a, b, c,))
    for yyy in se_res:
        aaa = dict()
        aaa['latlng'] = {'lat': float(yyy[6]), 'lng': float(yyy[5])}
        aaa['speed'] = yyy[2]
        aaa['passager'] = yyy[4]
        se_car.append(aaa)
    return se_car


def test_6(A):  # 输出一个小时的流量与速度
    mysql = DB()
    a = int(A['x'])
    b = int(A['y'])
    b = b * 60
    b1 = b + 59
    c = int(A['z'])
    s = []
    f = []
    s2 = []
    f2 = []
    s3 = []
    res_flow = mysql.get_mysql("select * from carflow201401%02d" % c + " where road_id = %s and time_minute between %s and %s", (a, b, b1,))
    res_speed = mysql.get_mysql("select * from averagespeed201401%02d" % c + " where road_id = %s and time_minute between %s and %s", (a, b, b1,))
    for i in range(len(res_flow)):
        f.append(res_flow[i][2])
        s.append(res_speed[i][2])
    f1 = list_of_groups(f, 10)
    s1 = list_of_groups(s, 10)
    for j in range(len(f1)):
        f2.append(sum(f1[j]))
        s2.append(int(sum(s1[j])/10))
    s3.append(f2)
    s3.append(s2)
    return s3


def test7(A):  # 搜索出租车的相关属性
    mysql = DB()
    a = []
    b = []  # trip数量
    c = []  # 平均距离
    d = []  # 平均费用
    statisticslist = mysql.get_mysql("select * from statistics201401%02d" % A + "")
    for rep in statisticslist:
        b.append(rep[2])
        c.append(rep[6])
        d.append(rep[5])
    a.append(b)
    a.append(c)
    a.append(d)
    # print(len(a), a)
    return a


def test8(C):
    A = C[1]
    B = C[2]
    mysql = DB()
    roadpoint = mysql.get_mysql("select * from road_point")
    road1 = []
    for res in roadpoint:
        road1.append([float(res[1]), float(res[2])])
    mindisA = []
    mindisB = []
    for i in range(len(road1)):
        mindisA.append(abs(float(A[0]) - road1[i][0]) + abs(float(A[1]) - road1[i][1]))
        mindisB.append(abs(float(B[0]) - road1[i][0]) + abs(float(B[1]) - road1[i][1]))
    a = mindisA.index(min(mindisA))
    b = mindisB.index(min(mindisB))
    # poiset 为三个兴趣点的结合顺序为加油站、超市、银行(中国建设银行)
    poiset = [{0: [411, 0, None], 1: [363, 0, None], 2: [40, 0, None], 3: [41, 0, None], 4: [266, 0, None], 5: [259, 0, None], 6: [51, 0, None], 7: [54, 0, None], 8: [55, 0, None], 9: [56, 0, None], 10: [160, 0, None], 11: [344, 0, None], 12: [99, 0, None], 13: [347, 0, None], 14: [256, 0, None], 15: [26, 0, None], 16: [388, 0, None], 17: [408, 0, None], 18: [206, 0, None], 19: [372, 0, None], 20: [135, 0, None], 21: [11, 0, None], 22: [235, 0, None], 23: [28, 0, None], 24: [39, 0, None], 25: [70, 0, None], 26: [195, 0, None], 27: [414, 0, None], 28: [64, 0, None], 29: [65, 0, None], 30: [67, 0, None], 31: [303, 0, None], 32: [117, 0, None], 33: [180, 0, None], 34: [310, 0, None], 35: [357, 0, None], 36: [349, 0, None], 37: [350, 0, None], 38: [139, 0, None], 39: [150, 0, None], 40: [142, 0, None], 41: [339, 0, None]}, {0: [173, 0, None], 1: [323, 0, None], 2: [325, 0, None], 3: [319, 0, None], 4: [18, 0, None], 5: [372, 0, None], 6: [124, 0, None], 7: [16, 0, None], 8: [232, 0, None], 9: [407, 0, None], 10: [79, 0, None], 11: [403, 0, None], 12: [223, 0, None], 13: [337, 0, None], 14: [211, 0, None], 15: [102, 0, None], 16: [216, 0, None], 17: [400, 0, None], 18: [263, 0, None], 19: [25, 0, None], 20: [275, 0, None], 21: [22, 0, None], 22: [257, 0, None], 23: [258, 0, None], 24: [261, 0, None], 25: [285, 0, None], 26: [42, 0, None], 27: [356, 0, None], 28: [351, 0, None], 29: [45, 0, None], 30: [48, 0, None], 31: [49, 0, None], 32: [354, 0, None], 33: [418, 0, None], 34: [250, 0, None], 35: [251, 0, None], 36: [28, 0, None], 37: [253, 0, None], 38: [254, 0, None], 39: [348, 0, None], 40: [434, 0, None], 41: [347, 0, None], 42: [370, 0, None], 43: [260, 0, None], 44: [291, 0, None], 45: [51, 0, None], 46: [97, 0, None], 47: [178, 0, None], 48: [98, 0, None], 49: [55, 0, None], 50: [56, 0, None], 51: [57, 0, None], 52: [158, 0, None], 53: [360, 0, None], 54: [361, 0, None], 55: [164, 0, None], 56: [75, 0, None], 57: [35, 0, None], 58: [68, 0, None], 59: [69, 0, None], 60: [312, 0, None], 61: [420, 0, None], 62: [74, 0, None], 63: [194, 0, None], 64: [193, 0, None], 65: [415, 0, None], 66: [417, 0, None], 67: [198, 0, None], 68: [197, 0, None], 69: [64, 0, None], 70: [66, 0, None], 71: [67, 0, None], 72: [304, 0, None], 73: [428, 0, None], 74: [121, 0, None], 75: [119, 0, None], 76: [113, 0, None], 77: [123, 0, None], 78: [310, 0, None], 79: [311, 0, None]}, {0: [342, 0, None], 1: [95, 0, None], 2: [258, 0, None], 3: [300, 0, None], 4: [29, 0, None], 5: [347, 0, None], 6: [56, 0, None], 7: [162, 0, None], 8: [296, 0, None], 9: [54, 0, None], 10: [284, 0, None], 11: [51, 0, None], 12: [435, 0, None], 13: [231, 0, None], 14: [410, 0, None], 15: [275, 0, None], 16: [246, 0, None], 17: [352, 0, None], 18: [20, 0, None], 19: [46, 0, None], 20: [402, 0, None], 21: [239, 0, None], 22: [17, 0, None], 23: [279, 0, None], 24: [383, 0, None], 25: [129, 0, None], 26: [214, 0, None], 27: [3, 0, None], 28: [324, 0, None], 29: [235, 0, None], 30: [403, 0, None], 31: [426, 0, None], 32: [43, 0, None], 33: [262, 0, None], 34: [125, 0, None], 35: [283, 0, None], 36: [132, 0, None], 37: [204, 0, None], 38: [42, 0, None], 39: [315, 0, None], 40: [217, 0, None], 41: [213, 0, None], 42: [321, 0, None], 43: [104, 0, None], 44: [276, 0, None], 45: [287, 0, None], 46: [407, 0, None], 47: [84, 0, None], 48: [272, 0, None], 49: [405, 0, None], 50: [209, 0, None], 51: [337, 0, None], 52: [102, 0, None], 53: [270, 0, None], 54: [35, 0, None], 55: [68, 0, None], 56: [119, 0, None], 57: [416, 0, None], 58: [301, 0, None], 59: [197, 0, None], 60: [308, 0, None], 61: [314, 0, None], 62: [64, 0, None], 63: [13, 0, None]}]
    inputparameter = []
    inputparameter.append({0: [a, 0, None]})
    if len(C[3]):
        for re in C[3]:
            inputparameter.append(poiset[re])
    inputparameter.append({0: [b, 0, None]})
    piupiu = dynamicsearchroad(inputparameter, C[0][1], C[0])
    # biubiubiu = dynamicsearchroad_d(inputparameter, C[0][1], 0)

    # roadname = roaddynamicprogramming([a, b])
    return [[a, b], piupiu]


def test8_1(C):
    a = searchTaxi(C[1], C[0])
    b = averageincome(C[0], C[1])
    return [a, b]


def init_distence(graph, s):
    distnece = {s: 0}
    for vertex in graph:
        if vertex != s:
            distnece[vertex] = math.inf
    return distnece


def dijkstra(graph, s):
    pqueue = []
    heapq.heappush(pqueue, (0, s))
    seen = set()
    parent = {s: None}
    distence = init_distence(graph, s)

    while (len(pqueue) > 0):
        pair = heapq.heappop(pqueue)
        dist = pair[0]
        vertex = pair[1]
        seen.add(vertex)
        nodes = graph[vertex].keys()
        for w in nodes:
            if w not in seen:
                if dist + graph[vertex][w] < distence[w]:
                    heapq.heappush(pqueue, (dist + graph[vertex][w], w))
                    parent[w] = vertex
                    distence[w] = dist + graph[vertex][w]
    return parent, distence


def dijkstra1(graph, s, initialminute, speeddata):
    # 一共436个点【0,435】
    readpointrelation = [[1, 399, 187, 79], [0, 2, 401], [1, 3, 402, 78], [80, 2, 4], [3, 5, 127], [372, 220, 4], [372, 7, 221, 126], [135, 19, 6], [73, 74, 314, 191], [320, 73, 75, 315, 14], [336, 133, 134, 328], [17, 327, 200, 239], [320, 322, 324, 15], [75, 35, 68], [240, 9, 173], [241, 324, 12, 173], [17, 18, 124, 126], [16, 11, 331, 236], [200, 16, 19], [200, 18, 7], [246, 247, 283, 175], [84, 277, 279, 281], [27, 281, 275], [275, 228, 24, 26], [25, 388, 23], [257, 389, 24, 26], [276, 23, 25, 316], [276, 252, 22, 28], [279, 27, 29, 251], [387, 28, 383], [385, 282, 383], [32, 387, 39, 248], [385, 33, 244, 31], [32, 34, 243], [240, 33, 35, 39], [34, 69, 38, 13], [68, 71, 313, 74], [419, 420, 70, 71], [35, 39, 70, 299], [34, 38, 31], [294, 426, 43, 184], [42, 294, 265], [356, 427, 41, 43], [40, 42, 44, 46], [338, 184, 43, 45], [50, 44, 46], [48, 43, 45, 47], [48, 356, 351, 46], [49, 46, 47], [48, 50, 363, 411], [49, 45], [98, 260, 95], [94, 412, 95], [97, 99, 54, 431], [98, 53, 55, 427], [56, 431, 54], [57, 55, 159], [162, 58, 56], [57, 59, 346], [58, 157], [166, 157, 158, 431], [171, 99, 166, 91], [366, 365, 63], [256, 316, 62], [65, 199, 429, 302], [64, 66], [65, 181, 303], [304, 307, 181], [69, 36, 72, 13], [35, 68, 70, 71], [37, 69, 38], [69, 37, 36], [68, 73, 74, 75], [72, 9, 8], [72, 8, 36], [72, 9, 13], [410, 77, 206, 207], [76, 78], [80, 2, 77, 79], [0, 78, 207], [3, 78, 203], [82, 230, 335], [81, 83, 337, 334], [225, 82, 230], [85, 21, 233, 283], [84, 86, 87], [88, 281, 85], [88, 85], [89, 86, 87], [88, 228, 233], [256, 91, 93], [90, 92, 61], [370, 91, 93], [369, 90, 92], [258, 179, 52], [51, 52, 413], [97, 98, 178], [96, 177, 53], [96, 51, 54], [53, 61, 165], [209, 101, 397], [104, 100], [210, 332, 103, 396], [404, 102, 105, 107], [105, 186, 101], [104, 103], [107], [216, 106, 103], [112, 305, 110, 111], [305, 116, 110], [113, 115, 108, 109], [112, 306, 108], [113, 123, 108, 111], [112, 114, 110], [113, 115, 308, 119], [114, 116, 121, 110], [117, 115, 109], [318, 116, 118], [120, 121, 117], [114, 310, 120, 121], [317, 118, 119], [115, 118, 119], [432, 180, 309, 123], [112, 122], [16, 201, 125], [124, 126, 127], [16, 125, 6], [125, 4, 205], [211, 334, 335], [394, 395, 263], [425, 131, 183], [321, 130, 133, 315], [425, 133, 134], [10, 131, 132], [132, 10, 190], [336, 188, 7], [137, 338, 138], [374, 136, 140, 142], [136, 139, 140], [138, 149], [149, 137, 138, 141], [148, 140, 142], [137, 141, 143], [144, 339, 142], [145, 143], [144, 146, 147], [145, 147], [145, 146, 148, 151], [147, 141, 150], [139, 140, 150], [148, 149, 151], [147, 150], [153, 155, 343], [152, 154, 342], [153, 155, 252], [152, 154, 156], [251, 252, 155], [59, 60, 158], [60, 157], [176, 56, 367], [161, 163, 367], [344, 160, 176], [57, 163, 346], [160, 345, 162], [361], [99, 166], [60, 61, 165], [168, 170], [169, 258, 167], [168, 260], [257, 258, 167], [360, 362, 61], [240, 241, 173], [172, 14, 15], [175, 235, 247], [234, 20, 174], [161, 159], [97, 178, 412], [96, 177, 413], [369, 94], [122, 307], [66, 67, 182], [181], [424, 130], [40, 44, 213], [212, 213, 186, 267], [214, 216, 185, 104], [0, 400, 403, 216], [336, 189, 135], [188, 340, 421], [341, 421, 423, 134], [192, 8, 341], [193, 194, 314, 191], [192, 195], [192, 196, 312, 301], [193, 196, 197], [194, 195, 414], [195, 198, 199], [417, 433, 197], [64, 433, 197], [11, 18, 19], [204, 202, 124, 205], [371, 201, 236, 222], [80, 204, 205], [201, 203, 222, 206], [201, 203, 127], [408, 410, 204, 76], [403, 79, 76, 398], [211, 410, 332, 333], [210, 100, 405, 263], [209, 211, 102, 335], [208, 210, 128], [185, 214], [184, 185, 426], [186, 212, 215], [216, 217, 214], [404, 215, 107, 186, 187], [400, 218, 215], [401, 219, 217], [218, 220, 402], [373, 219, 5], [340, 373, 6], [407, 232, 202, 204], [224, 337, 407, 408], [225, 231, 223], [224, 337, 83, 226], [225, 227, 228, 269], [226, 228, 231], [226, 227, 23, 89, 271], [272, 359, 270, 271], [81, 83, 405, 268], [224, 227, 406], [371, 406, 233, 222], [84, 232, 89, 234], [371, 233, 235, 175], [329, 234, 236, 174], [17, 202, 235], [244, 329, 331, 238], [242, 237, 239], [241, 324, 11, 238], [34, 243, 172, 14], [242, 172, 15, 239], [241, 243, 238], [240, 33, 242, 244], [32, 243, 245, 237], [244, 246, 247], [20, 245, 277, 282], [20, 245, 174], [249, 298, 31], [248, 297, 250], [343, 296, 249, 251], [250, 156, 28], [434, 154, 27, 156], [296, 379, 342], [348, 379, 364, 255], [256, 348, 365, 254], [90, 347, 63, 255], [170, 316, 25], [168, 170, 94], [272, 260, 261, 358], [259, 51, 390, 169], [259, 390, 392, 393], [272, 405, 392, 395], [289, 129, 209, 287], [265, 266, 284, 286], [435, 264, 41, 266], [264, 265, 393], [289, 295, 185, 284], [269, 270, 230], [226, 268, 270, 271], [269, 268, 229], [269, 228, 229], [259, 229, 262], [274, 388, 359], [273, 389, 358], [276, 22, 23], [27, 26, 275], [21, 246, 278, 283], [282, 277, 279], [21, 278, 280, 28], [281, 279], [21, 22, 86, 280], [278, 30, 246], [20, 84, 277], [290, 264, 267, 285], [288, 284, 286, 287], [264, 285, 287], [263, 285, 286], [289, 285], [288, 267, 263], [291, 292, 284], [290, 293], [290, 293, 294], [291, 292], [40, 41, 292], [426, 267], [381, 297, 250, 253], [296, 298, 249], [248, 297, 299], [298, 300, 38], [419, 299, 301, 382], [194, 300, 302], [64, 301, 303], [304, 66, 428, 302], [305, 67, 318, 303], [304, 306, 108, 109], [305, 307, 111], [306, 67, 180], [114, 309], [122, 308, 310], [119, 309, 311], [317, 310], [313, 194, 420], [312, 314, 36], [8, 313, 192], [9, 131, 319], [257, 26, 63], [120, 311], [304, 428, 117], [320, 321, 315], [9, 12, 319], [322, 131, 328, 319], [321, 323, 326, 12], [322, 324, 325], [323, 12, 15, 239], [323, 326], [322, 325, 327], [328, 11, 326], [321, 10, 327], [330, 235, 237], [329, 331], [17, 330, 237], [208, 404, 102, 398], [208, 337, 408, 334], [128, 82, 333], [128, 81, 210], [10, 188, 135], [225, 82, 333, 223], [136, 339, 44], [338, 374, 143], [221, 430, 189], [190, 191], [153, 253, 343], [152, 250, 342], [345, 161], [344, 163], [162, 58], [256, 348], [347, 254, 255], [350], [349, 357], [352, 354, 355, 47], [353, 363, 351], [352, 354], [353, 351], [356, 351], [42, 355, 47], [350, 378, 382], [274, 259, 359], [273, 229, 358], [361, 171], [360, 362, 164], [361, 171], [352, 49], [434, 365, 254], [364, 62, 255], [434, 62], [160, 159, 368], [367], [370, 179, 93], [369, 92], [232, 202, 234], [373, 5, 6], [372, 221, 220], [137, 339, 375], [374], [377], [376, 378, 380], [377, 357, 381], [253, 254], [377, 381], [296, 378, 380], [300, 357], [384, 29, 30], [385, 386, 383], [384, 32, 30], [384, 387], [386, 29, 31], [24, 273, 389], [25, 274, 388], [435, 260, 261], [392, 394, 395], [261, 262, 391], [266, 261, 394], [129, 393, 391], [129, 262, 391], [397, 102], [396, 100], [409, 332, 207], [400, 0, 401], [217, 187, 399], [402, 1, 218, 399], [401, 2, 219], [187, 207], [216, 332, 103], [209, 262, 230], [232, 407, 231], [406, 222, 223], [333, 206, 223], [410, 398], [208, 409, 76, 206], [49], [177, 413, 52], [178, 412, 95], [417, 196, 415], [416, 414], [417, 415], [416, 198, 414], [419, 420], [418, 300, 37], [312, 418, 37], [190, 422, 189], [421, 423], [422, 430, 190], [425, 183], [424, 130, 132], [40, 213, 295], [42, 54], [318, 303], [64], [340, 423], [55, 60, 53], [122], [198, 199], [364, 252, 366], [265, 390]]
    roadrelation = [[10, 164, 9, 101], [10, 11, 166], [11, 12, 41, 105], [107, 12, 13], [13, 14, 174], [15, 44, 14], [16, 17, 48, 181], [18, 184, 17], [471, 396, 473, 472], [252, 470, 609, 253, 593], [451, 258, 210, 450], [446, 448, 447, 237], [247, 242, 241, 648], [608, 607, 380], [589, 593, 590], [653, 654, 648, 592], [445, 182, 178, 179], [445, 446, 234, 444], [108, 182, 183], [109, 183, 184], [336, 342, 337, 338], [328, 332, 365, 325], [492, 324, 323], [322, 321, 320, 488], [312, 313, 320], [307, 308, 312, 487], [489, 488, 487, 486], [491, 414, 492, 363], [364, 363, 368, 417], [376, 368, 369], [582, 371, 370], [599, 377, 384, 498], [600, 601, 602, 599], [601, 604, 603], [605, 604, 606, 662], [606, 378, 386, 607], [393, 392, 401, 394], [613, 397, 389, 390], [386, 385, 387, 610], [662, 385, 384], [122, 60, 58, 59], [115, 116, 123], [113, 304, 115, 114], [58, 114, 57, 56], [551, 3, 57, 1], [2, 1, 55], [54, 56, 55, 111], [110, 112, 475, 111], [53, 54, 110], [53, 52, 300, 51], [52, 2], [265, 266, 283], [284, 280, 281], [270, 354, 269, 659], [264, 269, 305, 306], [647, 660, 305], [550, 647, 646], [542, 540, 550], [540, 539, 541], [539, 538], [534, 536, 535, 661], [515, 352, 351, 355], [413, 482, 483], [479, 484, 483], [19, 158, 655, 500], [19, 20, 663], [20, 663, 21, 502], [505, 23, 22], [379, 393, 381, 380], [378, 379, 388, 391], [389, 388, 387], [391, 390, 392], [381, 383, 395, 382], [383, 470, 471], [395, 396, 394], [382, 609, 608], [93, 102, 95, 96], [102, 103], [106, 105, 103, 104], [101, 104, 100], [107, 106, 169], [133, 205, 206], [133, 132, 140, 134], [138, 132, 208], [329, 328, 330, 334], [329, 327, 331], [583, 326, 327], [584, 331], [585, 583, 584], [585, 228, 229], [478, 356, 358], [356, 357, 355], [360, 357, 359], [361, 358, 359], [285, 477, 284], [283, 281, 282], [271, 272, 275], [271, 273, 270], [272, 265, 264], [354, 352, 353], [68, 69, 73], [70, 69], [76, 86, 78, 77], [88, 78, 79, 80], [72, 71, 70], [72, 79], [82], [81, 82, 80], [619, 509, 623, 510], [625, 630, 624], [622, 628, 623, 624], [620, 511, 510], [621, 580, 619, 620], [621, 626, 622], [626, 627, 650, 631], [627, 629, 633, 628], [634, 629, 630], [639, 634, 635], [637, 636, 635], [631, 649, 638, 632], [641, 637, 638], [633, 636, 632], [668, 25, 27, 26], [580, 26], [178, 176, 177], [177, 180, 175], [179, 180, 181], [175, 174, 173], [137, 135, 136], [129, 128, 130], [262, 263, 467], [256, 263, 257, 255], [261, 259, 260], [258, 257, 259], [260, 210, 211], [209, 147, 18], [674, 552, 562], [554, 674, 561, 560], [562, 566, 563], [566, 567], [651, 561, 563, 564], [570, 564, 565], [560, 565, 559], [558, 557, 559], [577, 558], [577, 576, 575], [576, 574], [575, 574, 573, 572], [573, 570, 569], [567, 651, 568], [569, 568, 571], [572, 571], [430, 429, 431], [430, 425, 424], [425, 427, 426], [429, 427, 428], [416, 415, 428], [538, 536, 537], [535, 537], [645, 646, 644], [548, 546, 642], [547, 548, 549], [542, 543, 664], [546, 544, 543], [519], [353, 594], [534, 351, 594], [291, 290], [287, 286, 291], [287, 288], [292, 289, 290], [516, 514, 515], [587, 588, 591], [591, 590, 592], [344, 345, 343], [339, 338, 344], [549, 645], [273, 274, 276], [275, 274, 279], [476, 477], [25, 24], [21, 22, 503], [503], [468, 467], [59, 3, 4], [33, 5, 6, 64], [35, 7, 6, 71], [9, 160, 99, 8], [452, 148, 147], [148, 50, 149], [151, 150, 30, 211], [153, 472, 152], [154, 403, 474, 153], [154, 155], [403, 404, 402, 617], [155, 405, 156], [404, 405, 406], [156, 409, 157], [408, 666, 409], [158, 667, 157], [447, 108, 109], [170, 442, 176, 171], [462, 442, 443, 441], [169, 168, 172], [170, 168, 440, 167], [171, 172, 173], [295, 92, 167, 95], [98, 100, 96, 97], [84, 90, 85, 143], [74, 68, 203, 67], [74, 83, 76, 207], [84, 83, 137], [33, 34], [4, 5, 61], [35, 34, 36], [37, 159, 36], [89, 37, 81, 7, 8], [161, 162, 159], [38, 39, 162], [39, 43, 42], [45, 43, 44], [49, 47, 48], [439, 458, 441, 440], [145, 146, 438, 293], [144, 454, 145], [144, 139, 138, 455], [455, 226, 225, 227], [226, 224, 453], [225, 224, 321, 228, 223], [215, 319, 216, 217], [205, 208, 204, 222], [454, 453, 457], [461, 456, 230, 458], [330, 230, 229, 459], [460, 459, 463, 339], [464, 463, 672, 345], [444, 443, 672], [347, 231, 465, 232, 235], [350, 235, 236], [578, 238, 237, 236], [605, 586, 587, 589], [579, 588, 653, 578], [579, 349, 350], [586, 603, 349, 348], [602, 348, 346, 347], [346, 340, 341], [336, 340, 335, 372], [342, 341, 343], [497, 496, 498], [497, 493, 494], [433, 436, 494, 434], [434, 416, 417], [670, 426, 414, 415], [435, 422, 423], [675, 421, 419, 418], [480, 522, 481, 418], [478, 520, 479, 480], [292, 485, 307], [286, 289, 285], [214, 268, 213, 311], [268, 266, 267, 288], [213, 212, 202, 201], [665, 131, 125, 126], [66, 130, 67, 193], [185, 197, 186, 188], [676, 185, 123, 196], [197, 196, 198], [65, 63, 64, 652], [221, 220, 222], [227, 221, 219, 218], [219, 220, 216], [218, 223, 217], [214, 215, 665], [316, 315, 317], [316, 309, 310], [490, 323, 322], [491, 489, 490], [332, 335, 374, 333], [373, 374, 375], [365, 375, 366, 364], [367, 366], [325, 324, 326, 367], [373, 371, 372], [337, 334, 333], [187, 186, 652, 192], [194, 192, 190, 191], [188, 190, 189], [193, 191, 189], [195, 194], [195, 65, 66], [121, 118, 187], [121, 120], [118, 119, 117], [120, 119], [122, 116, 117], [62, 63], [523, 437, 436, 435], [437, 495, 493], [496, 495, 499], [499, 611, 610], [612, 611, 616, 531], [617, 616, 618], [500, 618, 501], [504, 502, 581, 501], [506, 505, 640, 504], [506, 507, 509, 625], [507, 508, 511], [508, 23, 24], [650, 28], [27, 28, 29], [649, 29, 513], [512, 513], [399, 402, 398], [399, 400, 401], [473, 400, 474], [253, 255, 254], [485, 486, 484], [641, 512], [640, 658, 639], [248, 249, 254], [252, 247, 248], [250, 256, 251, 249], [250, 243, 244, 242], [243, 239, 240], [239, 241, 654, 238], [240, 245], [244, 245, 246], [449, 448, 246], [251, 450, 449], [466, 464, 231, 465], [466, 233], [234, 233, 232], [85, 87, 86, 678], [143, 141, 294, 142], [135, 134, 142], [136, 206, 207], [451, 452, 209], [139, 140, 141, 146], [552, 553, 551], [553, 555, 557], [49, 657, 50], [151, 152], [424, 423, 432], [431, 433, 432], [545, 547], [545, 544], [664, 541], [520, 521], [521, 675, 522], [533], [533, 532], [297, 296, 303, 475], [299, 301, 297], [299, 298], [298, 296], [302, 303], [113, 302, 112], [532, 529, 530], [310, 311, 318], [317, 319, 318], [517, 516], [517, 518, 519], [518, 514], [301, 300], [671, 420, 419], [420, 482, 481], [669, 413], [642, 644, 643], [643], [362, 476, 361], [362, 360], [461, 462, 460], [46, 15, 16], [46, 47, 45], [554, 555, 556], [556], [528], [528, 526, 527], [526, 529, 525], [422, 421], [527, 524], [523, 525, 524], [531, 530], [597, 369, 370], [598, 596, 597], [598, 600, 582], [596, 595], [595, 376, 377], [313, 315, 314], [308, 309, 314], [677, 267, 212], [124, 200, 127], [202, 125, 124], [198, 201, 199], [129, 199, 200], [128, 126, 127], [75, 77], [75, 73], [94, 678, 97], [163, 164, 165], [161, 160, 163], [40, 166, 38, 165], [40, 41, 42], [99, 98], [89, 87, 88], [203, 131, 204], [456, 673, 457], [673, 439, 438], [294, 295, 293], [91, 94], [90, 91, 93, 92], [51], [276, 277, 280], [279, 277, 282], [407, 406, 410], [411, 410], [412, 411], [412, 408, 407], [614, 615], [614, 612, 613], [398, 615, 397], [150, 31, 149], [31, 32], [32, 656, 30], [469, 468], [469, 262, 261], [60, 61, 62], [304, 306], [658, 581], [655], [657, 656], [660, 661, 659], [668], [666, 667], [671, 670, 669], [676, 677]]
    graphk = dict()
    for i in range(len(graph)):
        graphk[i] = dict()
        for ii in range(len(readpointrelation[i])):
            graphk[i][readpointrelation[i][ii]] = graph[i][readpointrelation[i][ii]]/speeddata[initialminute][roadrelation[i][ii]-1]*60
    pqueue = []
    heapq.heappush(pqueue, (0, s))
    seen = set()
    parent = {s: None}
    distence = init_distence(graphk, s)
    k = 1

    while (len(pqueue) > 0):
        pair = heapq.heappop(pqueue)
        dist = pair[0]
        vertex = pair[1]
        seen.add(vertex)
        if dist > 10*k:
            # print(dist)
            minute = 10*k+initialminute
            graphk = dict()
            for i in range(len(graph)):
                graphk[i] = dict()
                for ii in range(len(readpointrelation[i])):
                    graphk[i][readpointrelation[i][ii]] = graph[i][readpointrelation[i][ii]] / speeddata[minute][roadrelation[i][ii] - 1] * 60
            k = k+1
        nodes = graphk[vertex].keys()
        for w in nodes:
            if w not in seen:
                if dist + graphk[vertex][w] < distence[w]:
                    heapq.heappush(pqueue, (dist + graphk[vertex][w], w))
                    parent[w] = vertex
                    distence[w] = dist + graphk[vertex][w]
    return parent, distence


def dynamicsearchroad(A, B, C):
    b = [[45, 44], [45, 50], [44, 184], [184, 213], [213, 185], [185, 186], [186, 216], [216, 187], [187, 0], [0, 1], [1, 2], [2, 3], [3, 4], [4, 5], [5, 372], [372, 6], [6, 7], [7, 135], [64, 65], [65, 66], [66, 181], [181, 67], [67, 307], [307, 180], [180, 122], [122, 123], [122, 309], [309, 308], [309, 310], [190, 423], [421, 422], [423, 422], [185, 212], [212, 214], [186, 214], [214, 215], [216, 215], [401, 218], [218, 219], [401, 402], [2, 402], [402, 219], [219, 220], [5, 220], [220, 373], [372, 373], [373, 221], [6, 221], [221, 340], [189, 340], [411, 49], [49, 50], [49, 48], [48, 46], [46, 45], [46, 43], [43, 44], [43, 40], [40, 184], [40, 426], [426, 213], [426, 295], [295, 267], [267, 185], [267, 289], [289, 263], [263, 209], [209, 100], [100, 101], [101, 104], [104, 186], [104, 105], [100, 397], [209, 210], [397, 396], [210, 102], [396, 102], [102, 103], [105, 103], [103, 107], [107, 216], [107, 106], [210, 211], [211, 208], [208, 332], [102, 332], [332, 404], [103, 404], [404, 216], [208, 410], [410, 409], [410, 206], [410, 76], [409, 398], [206, 76], [76, 207], [398, 207], [207, 403], [403, 187], [207, 79], [79, 0], [76, 77], [77, 78], [78, 79], [78, 2], [78, 80], [80, 3], [18, 200], [19, 200], [48, 47], [46, 47], [47, 356], [356, 42], [42, 43], [42, 41], [41, 294], [294, 292], [292, 290], [292, 293], [293, 291], [291, 290], [294, 40], [41, 265], [391, 392], [392, 262], [262, 395], [391, 395], [395, 129], [394, 129], [129, 263], [262, 405], [83, 82], [82, 81], [82, 334], [334, 128], [128, 335], [128, 211], [83, 225], [225, 337], [337, 82], [337, 333], [333, 334], [333, 208], [225, 224], [224, 223], [223, 337], [135, 188], [188, 189], [189, 421], [421, 190], [190, 341], [341, 191], [191, 192], [192, 193], [193, 195], [195, 197], [197, 199], [199, 64], [215, 217], [187, 400], [400, 217], [217, 218], [400, 399], [0, 399], [399, 401], [1, 401], [206, 204], [204, 203], [203, 80], [204, 201], [201, 205], [205, 203], [205, 127], [127, 4], [127, 125], [201, 124], [124, 125], [124, 16], [16, 126], [126, 125], [126, 6], [16, 18], [18, 19], [19, 7], [265, 264], [264, 284], [284, 290], [264, 286], [286, 287], [285, 286], [287, 285], [285, 284], [287, 263], [285, 288], [288, 289], [265, 266], [264, 266], [266, 393], [393, 394], [394, 391], [393, 261], [261, 392], [405, 209], [405, 230], [230, 81], [81, 335], [335, 210], [230, 83], [336, 135], [10, 134], [134, 190], [261, 390], [261, 259], [259, 272], [272, 229], [229, 270], [229, 271], [271, 269], [269, 270], [270, 268], [269, 268], [268, 230], [271, 228], [228, 227], [228, 226], [227, 226], [226, 269], [228, 89], [89, 233], [233, 232], [329, 237], [237, 331], [331, 330], [331, 17], [237, 238], [238, 239], [239, 11], [239, 324], [324, 323], [323, 325], [324, 12], [12, 322], [322, 323], [322, 326], [326, 325], [326, 327], [12, 320], [320, 319], [319, 321], [321, 322], [321, 328], [320, 9], [9, 315], [315, 319], [315, 131], [131, 321], [131, 133], [133, 10], [133, 132], [132, 134], [132, 425], [425, 130], [130, 131], [54, 98], [98, 51], [51, 260], [260, 390], [260, 259], [53, 54], [53, 97], [97, 96], [96, 98], [97, 177], [177, 178], [178, 96], [177, 412], [412, 413], [413, 413], [413, 178], [412, 52], [52, 95], [95, 413], [95, 51], [52, 94], [94, 258], [258, 168], [168, 169], [169, 260], [258, 170], [170, 167], [167, 168], [170, 257], [223, 408], [408, 333], [408, 206], [351, 354], [351, 352], [354, 353], [353, 352], [363, 49], [352, 363], [356, 355], [351, 355], [42, 427], [55, 54], [54, 427], [257, 25], [25, 389], [389, 274], [274, 358], [358, 259], [25, 24], [24, 388], [388, 389], [388, 273], [273, 274], [273, 359], [359, 358], [359, 229], [24, 23], [23, 228], [23, 275], [275, 22], [22, 281], [281, 21], [281, 86], [86, 85], [21, 84], [85, 84], [84, 233], [85, 87], [21, 277], [277, 283], [283, 84], [277, 246], [246, 20], [20, 283], [20, 175], [175, 234], [246, 245], [245, 247], [247, 20], [247, 174], [174, 175], [174, 235], [245, 244], [244, 237], [244, 243], [243, 242], [242, 238], [166, 61], [61, 99], [99, 165], [99, 53], [61, 91], [91, 90], [91, 92], [90, 93], [93, 92], [92, 370], [93, 369], [369, 370], [27, 28], [28, 279], [279, 21], [279, 280], [280, 281], [28, 29], [29, 383], [383, 30], [30, 282], [282, 246], [282, 278], [278, 277], [278, 279], [29, 387], [387, 31], [35, 69], [69, 68], [68, 13], [68, 72], [72, 75], [72, 73], [31, 39], [39, 38], [38, 35], [38, 70], [70, 69], [70, 37], [37, 71], [71, 69], [71, 36], [36, 68], [36, 74], [74, 72], [74, 8], [37, 420], [420, 312], [312, 313], [313, 314], [313, 36], [312, 194], [194, 192], [194, 196], [196, 195], [196, 414], [414, 417], [417, 198], [198, 197], [414, 415], [415, 416], [416, 417], [62, 366], [252, 27], [252, 156], [156, 251], [251, 28], [255, 254], [254, 364], [364, 365], [254, 379], [379, 253], [253, 342], [342, 153], [153, 154], [154, 252], [154, 155], [155, 156], [155, 152], [153, 152], [152, 343], [342, 343], [343, 250], [250, 251], [253, 296], [296, 250], [296, 297], [223, 407], [407, 222], [222, 204], [222, 202], [202, 201], [236, 202], [236, 17], [17, 16], [17, 11], [11, 200], [11, 327], [327, 328], [328, 10], [10, 336], [336, 188], [227, 231], [231, 224], [226, 225], [232, 406], [406, 231], [232, 222], [233, 234], [234, 371], [371, 232], [371, 202], [234, 235], [235, 329], [329, 237], [329, 330], [130, 183], [183, 424], [424, 425], [9, 73], [73, 8], [8, 191], [8, 314], [314, 192], [47, 351], [369, 179], [179, 94], [90, 256], [256, 63], [256, 255], [255, 365], [365, 62], [62, 63], [63, 316], [316, 257], [316, 26], [26, 25], [26, 23], [26, 276], [276, 275], [276, 27], [27, 22], [297, 249], [250, 249], [297, 298], [298, 248], [249, 248], [248, 31], [298, 299], [302, 64], [302, 303], [303, 66], [181, 182], [303, 304], [304, 67], [304, 305], [305, 306], [306, 307], [305, 108], [108, 111], [111, 306], [317, 311], [311, 310], [171, 362], [171, 61], [171, 360], [360, 361], [361, 362], [361, 164], [256, 347], [347, 348], [348, 255], [381, 296], [381, 380], [381, 378], [378, 377], [377, 380], [377, 376], [378, 357], [357, 382], [382, 300], [357, 350], [350, 349], [166, 60], [60, 158], [60, 157], [157, 158], [157, 59], [59, 58], [58, 57], [58, 346], [57, 162], [162, 163], [163, 345], [345, 344], [163, 160], [344, 161], [160, 161], [161, 176], [56, 57], [44, 338], [338, 136], [338, 339], [137, 374], [374, 339], [374, 375], [339, 143], [143, 144], [143, 142], [137, 142], [137, 140], [136, 138], [138, 140], [140, 141], [141, 142], [138, 139], [139, 149], [149, 150], [150, 148], [148, 141], [150, 151], [151, 147], [148, 147], [147, 146], [147, 145], [145, 146], [144, 145], [241, 239], [241, 242], [123, 112], [303, 428], [385, 30], [86, 88], [87, 88], [88, 89], [243, 240], [240, 172], [172, 241], [240, 14], [14, 173], [173, 172], [173, 15], [14, 9], [166, 165], [387, 386], [386, 384], [384, 383], [384, 385], [31, 32], [32, 385], [32, 33], [32, 244], [33, 243], [33, 34], [34, 240], [34, 35], [35, 13], [13, 75], [75, 9], [299, 38], [299, 300], [300, 419], [419, 37], [419, 418], [418, 420], [300, 301], [301, 194], [301, 302], [108, 112], [112, 111], [112, 113], [113, 110], [110, 108], [110, 109], [109, 305], [113, 114], [114, 115], [115, 110], [115, 116], [116, 109], [114, 119], [119, 121], [121, 115], [116, 117], [117, 118], [118, 121], [118, 120], [120, 119], [117, 318], [318, 304], [120, 317], [160, 367], [367, 368], [159, 367], [159, 176], [159, 56], [56, 55], [15, 12], [310, 119], [308, 114], [140, 149], [284, 267], [241, 15], [15, 324], [64, 429], [423, 430], [430, 340], [318, 428], [431, 53], [55, 431], [431, 60], [34, 39], [65, 66], [346, 162], [262, 272], [198, 433], [433, 199], [432, 122], [366, 434], [434, 252], [434, 364], [235, 236], [407, 406], [137, 136], [254, 348], [265, 435], [390, 435], [398, 332]]
    graph = {0: {1: 0.224285094385491, 79: 0.149408395288133, 187: 0.391678622957074, 399: 0.0835480208965531},
             1: {0: 0.224285094385491, 401: 0.0965991104837438, 2: 0.346129331977769},
             2: {1: 0.346129331977769, 402: 0.0886849861272248, 3: 0.53828096810124, 78: 0.207189072806985},
             3: {80: 0.152079546814538, 2: 0.53828096810124, 4: 0.734421860875849},
             4: {3: 0.734421860875849, 5: 0.311988113125024, 127: 0.102837256797613},
             5: {220: 0.204823210270258, 372: 0.479269324684528, 4: 0.311988113125024},
             6: {372: 0.324523905811511, 221: 0.21897978557335, 126: 0.201586582733104, 7: 0.974399038186258},
             7: {19: 0.283412444566773, 6: 0.974399038186258, 135: 0.818839945755207},
             8: {73: 0.56756261688388, 74: 0.282958424226688, 314: 0.471224524950935, 191: 0.786645212957485},
             9: {320: 0.408683980325492, 73: 0.662256200458975, 75: 0.177525181661146, 14: 0.769450867572729,
                 315: 0.414767618816976},
             10: {336: 0.354345339838707, 328: 0.68801028693561, 133: 0.0875360903713851, 134: 0.390129294371201},
             11: {200: 0.145196300488978, 17: 0.960991296995189, 239: 0.394975337717595, 327: 0.946382018049632},
             12: {320: 0.199832125966581, 322: 0.136132008562351, 324: 0.392645806957113, 15: 0.464200420025809},
             13: {35: 0.23902890426301, 75: 0.176255974082331, 68: 0.542368964385193},
             14: {240: 0.653587656148277, 9: 0.769450867572729, 173: 0.0980675525843713},
             15: {241: 0.353045740346311, 324: 0.233116431400672, 173: 0.201912744389766, 12: 0.464200420025809},
             16: {17: 0.283791552661023, 18: 0.752481513438919, 124: 0.554045280874335, 126: 0.173731316001806},
             17: {16: 0.283791552661023, 331: 0.102678579608733, 11: 0.960991296995189, 236: 0.517752807007478},
             18: {200: 0.226005175390068, 16: 0.752481513438919, 19: 0.262814641863992},
             19: {200: 0.161459000871089, 18: 0.262814641863992, 7: 0.283412444566773},
             20: {283: 0.479135753965211, 175: 0.144908789757992, 246: 0.212774062883711, 247: 0.347715951850883},
             21: {281: 0.444987365455945, 84: 0.160357646189596, 277: 0.462125749905571, 279: 0.167587636853095},
             22: {275: 0.34140482907267, 281: 0.362670008133777, 27: 0.444294751183543},
             23: {24: 0.189810937355017, 26: 0.555594446244569, 275: 0.612598834914052, 228: 0.738321081387347},
             24: {25: 0.682785199872119, 388: 0.128409613183633, 23: 0.189810937355017},
             25: {24: 0.682785199872119, 257: 0.416471023199936, 26: 0.689157041075175, 389: 0.214196040095418},
             26: {25: 0.689157041075175, 276: 0.849782394355163, 316: 0.426580402115447, 23: 0.555594446244569},
             27: {252: 0.546358229879827, 276: 0.366870262214443, 22: 0.444294751183543, 28: 0.984256068867829},
             28: {27: 0.984256068867829, 251: 0.40909513514829, 29: 0.77973157266536, 279: 0.315312700748783},
             29: {387: 0.460600730585724, 28: 0.77973157266536, 383: 0.146503694820379},
             30: {385: 0.285729707759964, 282: 0.121062013686103, 383: 0.123953494923005},
             31: {32: 0.3356868117716, 248: 0.367847558940192, 387: 0.59964796289411, 39: 0.906722866429635},
             32: {385: 0.746219681415454, 31: 0.3356868117716, 244: 0.152603235071104, 33: 0.246996783311526},
             33: {32: 0.246996783311526, 34: 0.632520261760245, 243: 0.161518650904463},
             34: {240: 0.19466346909159, 33: 0.632520261760245, 35: 0.869734322334272, 39: 0.324506518506713},
             35: {34: 0.869734322334272, 69: 0.554805281089765, 38: 0.400514921424208, 13: 0.23902890426301},
             36: {313: 0.561520483680188, 74: 0.304858115337732, 68: 0.491765553397677, 71: 0.190985609930131},
             37: {419: 0.239183531192535, 420: 0.192315798871929, 70: 0.57129385223299, 71: 0.159864026774406},
             38: {299: 0.646858107078652, 35: 0.400514921424208, 70: 0.637838591356894, 39: 0.515376042217826},
             39: {34: 0.324506518506713, 38: 0.515376042217826, 31: 0.906722866429635},
             40: {184: 0.358354985734951, 426: 0.302889642866584, 43: 0.982384164285611, 294: 0.357792053715086},
             41: {265: 1.08749554948129, 42: 0.795952680399793, 294: 0.215124493556229},
             42: {41: 0.795952680399793, 427: 0.283267255175122, 356: 1.29097961418918, 43: 0.433263439248678},
             43: {40: 0.982384164285611, 42: 0.433263439248678, 44: 0.250859625714059, 46: 1.75354662383657},
             44: {184: 0.919845891030154, 338: 0.885646385004138, 43: 0.250859625714059, 45: 1.65400077144655},
             45: {50: 0.918320413436187, 44: 1.65400077144655, 46: 0.23145221789096},
             46: {48: 0.447989835776544, 43: 1.75354662383657, 45: 0.23145221789096, 47: 0.137371844420961},
             47: {48: 0.378071473663263, 356: 0.424739719752445, 46: 0.137371844420961, 351: 0.331606401213137},
             48: {49: 0.527020141692071, 46: 0.447989835776544, 47: 0.378071473663263},
             49: {48: 0.527020141692071, 50: 0.306715397524556, 363: 0.468464885200311, 411: 0.482684982085282},
             50: {49: 0.306715397524556, 45: 0.918320413436187},
             51: {98: 1.04608127017261, 260: 1.62284856257133, 95: 0.285044476226383},
             52: {412: 0.245793875689568, 94: 0.969830321080682, 95: 0.181549559682669},
             53: {97: 0.529157353379161, 99: 0.718906878269652, 54: 0.452269331205574, 431: 2.7137797862091},
             54: {98: 0.393861036155737, 427: 1.24430911240219, 53: 0.452269331205574, 55: 2.38637084373488},
             55: {56: 2.03643824799509, 54: 2.38637084373488, 431: 0.776626315846115},
             56: {57: 0.966333093864362, 159: 1.57201159578001, 55: 2.03643824799509},
             57: {56: 0.966333093864362, 162: 3.51820091676642, 58: 0.389592087750958},
             58: {57: 0.389592087750958, 346: 2.30666384040694, 59: 1.15754315815645},
             59: {58: 1.15754315815645, 157: 0.694132114005516},
             60: {431: 0.665844984513799, 157: 0.258742458947742, 166: 0.81444201010584, 158: 0.526594825089464},
             61: {99: 0.390037372665688, 91: 1.83221143293478, 171: 0.326443613922791, 166: 1.76178536110562},
             62: {365: 0.369223404994207, 366: 0.392134871818312, 63: 0.138334228787085},
             63: {256: 0.491831168407387, 316: 0.898746978925582, 62: 0.138334228787085},
             64: {65: 1.96571242848068, 429: 0.376342181781275, 302: 0.930204184608853, 199: 0.867096783661718},
             65: {64: 1.96571242848068, 66: 0.707525143324705},
             66: {65: 0.707525143324705, 181: 0.924828124906173, 303: 0.543694815881759},
             67: {304: 1.90241396980492, 307: 3.39205004265527, 181: 0.941906549521915},
             68: {72: 0.245727805208249, 36: 0.491765553397677, 69: 0.226265904334626, 13: 0.542368964385193},
             69: {35: 0.554805281089765, 68: 0.226265904334626, 70: 0.25213374780311, 71: 0.508134542117803},
             70: {37: 0.57129385223299, 38: 0.637838591356894, 69: 0.25213374780311},
             71: {36: 0.190985609930131, 69: 0.508134542117803, 37: 0.159864026774406},
             72: {73: 0.249462215644126, 74: 0.539119230022811, 75: 0.589785042432223, 68: 0.245727805208249},
             73: {72: 0.249462215644126, 9: 0.662256200458975, 8: 0.56756261688388},
             74: {72: 0.539119230022811, 8: 0.282958424226688, 36: 0.304858115337732},
             75: {72: 0.589785042432223, 9: 0.177525181661146, 13: 0.176255974082331},
             76: {410: 0.396515964416368, 77: 0.353912515174393, 206: 0.228344737876005, 207: 0.129728283690527},
             77: {76: 0.353912515174393, 78: 0.119913014106472},
             78: {80: 0.583203576652014, 2: 0.207189072806985, 77: 0.119913014106472, 79: 0.439077176318045},
             79: {0: 0.149408395288133, 78: 0.439077176318045, 207: 0.147007478874271},
             80: {3: 0.152079546814538, 78: 0.583203576652014, 203: 0.233334543824575},
             81: {82: 0.438510671723605, 230: 0.153195715762057, 335: 0.106435265662082},
             82: {81: 0.438510671723605, 83: 0.11578156265141, 334: 0.0966963305600349, 337: 0.376973295482337},
             83: {225: 0.374079584648362, 82: 0.11578156265141, 230: 0.45349536316799},
             84: {233: 0.449295560268477, 283: 0.455585004280606, 85: 0.183727371305341, 21: 0.160357646189596},
             85: {84: 0.183727371305341, 86: 0.199771891057524, 87: 0.302577581457305},
             86: {88: 0.271259155762651, 281: 0.104572353647361, 85: 0.199771891057524},
             87: {88: 0.145372302896793, 85: 0.302577581457305},
             88: {89: 0.234316123692473, 86: 0.271259155762651, 87: 0.145372302896793},
             89: {88: 0.234316123692473, 233: 0.391915962360779, 228: 0.459399824901834},
             90: {256: 2.06925456070587, 91: 0.579968656906652, 93: 0.127285492924163},
             91: {90: 0.579968656906652, 92: 0.280106850556102, 61: 1.83221143293478},
             92: {370: 0.316808102172516, 91: 0.280106850556102, 93: 0.464526345244372},
             93: {369: 0.292801570737626, 90: 0.127285492924163, 92: 0.464526345244372},
             94: {258: 0.70932112535641, 179: 0.367194931720079, 52: 0.969830321080682},
             95: {51: 0.285044476226383, 52: 0.181549559682669, 413: 0.221906919294244},
             96: {97: 0.186938172636107, 98: 0.267419775751268, 178: 0.239198684368233},
             97: {96: 0.186938172636107, 177: 0.23328565230024, 53: 0.529157353379161},
             98: {96: 0.267419775751268, 51: 1.04608127017261, 54: 0.393861036155737},
             99: {165: 1.39050110646662, 53: 0.718906878269652, 61: 0.390037372665688},
             100: {209: 0.283031388991704, 101: 0.0712993698400632, 397: 0.311417857418235},
             101: {104: 0.120420350088937, 100: 0.0712993698400632},
             102: {396: 0.164952031722695, 210: 0.183895276598054, 332: 0.454257545644438,
                   103: 0.182757931122691},
             103: {105: 0.265809220296463, 107: 0.199345515091881, 404: 0.327873429904537,
                   102: 0.182757931122691},
             104: {105: 0.300566722275626, 186: 0.424466414337713, 101: 0.120420350088937},
             105: {104: 0.300566722275626, 103: 0.265809220296463}, 106: {107: 0.298429428020782},
             107: {216: 0.128333325063217, 106: 0.298429428020782, 103: 0.199345515091881},
             108: {112: 0.54144010144892, 305: 0.65121596079633, 110: 0.401433937500708, 111: 0.522027005933706},
             109: {305: 0.394784266807707, 116: 0.30171184554946, 110: 0.70819277542913},
             110: {113: 0.564275108180298, 115: 0.307527745791387, 108: 0.401433937500708, 109: 0.70819277542913},
             111: {112: 0.391836876300501, 306: 0.325985567264399, 108: 0.522027005933706},
             112: {113: 0.360781942197145, 123: 1.35301671428682, 108: 0.54144010144892, 111: 0.391836876300501},
             113: {112: 0.360781942197145, 114: 0.317944149651573, 110: 0.564275108180298},
             114: {113: 0.317944149651573, 115: 0.560187742427876, 308: 1.42146738102024, 119: 0.155013133608576},
             115: {121: 0.212301595847583, 114: 0.560187742427876, 116: 0.722155742263166,
                   110: 0.307527745791387},
             116: {115: 0.722155742263166, 117: 0.28810210481872, 109: 0.30171184554946},
             117: {116: 0.28810210481872, 118: 0.658822419514702, 318: 2.38639492998528},
             118: {120: 0.561897625955621, 121: 0.130033362265991, 117: 0.658822419514702},
             119: {120: 0.205597074451193, 121: 0.583050852038617, 114: 0.155013133608576, 310: 1.93680130267345},
             120: {317: 1.14617444819355, 118: 0.561897625955621, 119: 0.205597074451193},
             121: {115: 0.212301595847583, 118: 0.130033362265991, 119: 0.583050852038617},
             122: {432: 1.43020527231666, 123: 0.682850287790564, 180: 0.784157318709935, 309: 0.374814774992423},
             123: {112: 1.35301671428682, 122: 0.682850287790564},
             124: {16: 0.554045280874335, 201: 0.494119383718756, 125: 0.227027167345884},
             125: {124: 0.227027167345884, 126: 0.465449159832096, 127: 0.572264813732885},
             126: {16: 0.173731316001806, 125: 0.465449159832096, 6: 0.201586582733104},
             127: {4: 0.102837256797613, 125: 0.572264813732885, 205: 0.126739334667995},
             128: {211: 0.100981173586291, 334: 0.0776415151258508, 335: 0.360310952964865},
             129: {394: 0.494355107248865, 395: 0.0779012414879846, 263: 0.329913458835001},
             130: {425: 0.0897414226733588, 131: 0.504843040076711, 183: 0.323787110830818},
             131: {321: 0.482290670170536, 130: 0.504843040076711, 315: 0.16405348111447, 133: 0.100045252262838},
             132: {425: 0.0706869008167966, 133: 0.439917433079022, 134: 0.0799816888389501},
             133: {10: 0.0875360903713851, 131: 0.100045252262838, 132: 0.439917433079022},
             134: {10: 0.390129294371201, 132: 0.0799816888389501, 190: 0.578068795639768},
             135: {336: 0.863076062574328, 188: 0.835811877045488, 7: 0.818839945755207},
             136: {137: 0.335542512156344, 338: 1.49727780630657, 138: 1.0641488074221},
             137: {136: 0.335542512156344, 140: 1.00525660632764, 142: 0.471524994283068, 374: 0.832311892701239},
             138: {136: 1.0641488074221, 139: 1.627213818024, 140: 0.244989289887702},
             139: {138: 1.627213818024, 149: 0.299450670557084},
             140: {137: 1.00525660632764, 138: 0.244989289887702, 149: 1.65549719108667, 141: 0.280750134997849},
             141: {140: 0.280750134997849, 148: 0.603173438524901, 142: 0.914144930550114},
             142: {137: 0.471524994283068, 141: 0.914144930550114, 143: 1.51842209558624},
             143: {144: 0.160451011472166, 339: 0.699839438325404, 142: 1.51842209558624},
             144: {145: 2.63443797707343, 143: 0.160451011472166},
             145: {144: 2.63443797707343, 146: 0.464272321369433, 147: 0.444149453220779},
             146: {145: 0.464272321369433, 147: 0.0874475004938308},
             147: {145: 0.444149453220779, 146: 0.0874475004938308, 148: 0.332471117135161,
                   151: 0.873080988531269},
             148: {147: 0.332471117135161, 141: 0.603173438524901, 150: 0.97928049466714},
             149: {139: 0.299450670557084, 140: 1.65549719108667, 150: 0.188004497656454},
             150: {148: 0.97928049466714, 149: 0.188004497656454, 151: 0.294139116655804},
             151: {147: 0.873080988531269, 150: 0.294139116655804},
             152: {153: 0.290940933024284, 155: 0.0712483768892728, 343: 0.131930306759024},
             153: {152: 0.290940933024284, 154: 0.0763330865971258, 342: 0.124338844974692},
             154: {153: 0.0763330865971258, 155: 0.294678808994025, 252: 0.127027778184356},
             155: {152: 0.0712483768892728, 154: 0.294678808994025, 156: 0.123653602792398},
             156: {251: 0.700825730304375, 252: 0.298657913400406, 155: 0.123653602792398},
             157: {59: 0.694132114005516, 60: 0.258742458947742, 158: 0.69800173556639},
             158: {60: 0.526594825089464, 157: 0.69800173556639},
             159: {176: 2.87197362231661, 56: 1.57201159578001, 367: 1.1707120539029},
             160: {161: 1.15490875949099, 163: 0.350727518994123, 367: 0.957225278842597},
             161: {344: 0.533319062593778, 160: 1.15490875949099, 176: 0.476922823063224},
             162: {57: 3.51820091676642, 346: 2.03731684208763, 163: 0.120556607170654},
             163: {160: 0.350727518994123, 345: 0.95859903518266, 162: 0.120556607170654},
             164: {361: 0.792802954995246},
             165: {99: 1.39050110646662, 166: 0.345591795651293},
             166: {60: 0.81444201010584, 61: 1.76178536110562, 165: 0.345591795651293},
             167: {168: 0.373721357262457, 170: 0.175412755791807},
             168: {169: 0.156560223146928, 258: 0.210342570694226, 167: 0.373721357262457},
             169: {168: 0.156560223146928, 260: 0.293642035437177},
             170: {257: 0.334598687505465, 258: 0.405977212598252, 167: 0.175412755791807},
             171: {360: 0.117026708774484, 362: 0.35392385082856, 61: 0.326443613922791},
             172: {240: 0.0752148435066984, 241: 0.254487252844253, 173: 0.597885103238615},
             173: {172: 0.597885103238615, 14: 0.0980675525843713, 15: 0.201912744389766},
             174: {235: 0.119934981369974, 247: 0.130570854728893, 175: 0.317025516915388},
             175: {234: 0.134521324332722, 20: 0.144908789757992, 174: 0.317025516915388},
             176: {161: 0.476922823063224, 159: 2.87197362231661},
             177: {97: 0.23328565230024, 178: 0.179926128907533, 412: 0.522092910353022},
             178: {96: 0.239198684368233, 177: 0.179926128907533, 413: 0.523292200671836},
             179: {369: 0.293203875871861, 94: 0.367194931720079},
             180: {122: 0.784157318709935, 307: 1.48322403985038},
             181: {66: 0.543694815881759, 67: 0.941906549521915, 182: 0.286456596710005},
             182: {181: 0.286456596710005},
             183: {424: 0.125575412628426, 130: 0.323787110830818},
             184: {40: 0.358354985734951, 44: 0.919845891030154, 213: 0.319797974144766},
             185: {186: 1.083373314029, 267: 0.437728571181838, 212: 0.0622172382621088, 213: 0.422331490155333},
             186: {216: 0.716394243382668, 185: 1.083373314029, 214: 0.186666296699859, 104: 0.424466414337713},
             187: {0: 0.391678622957074, 400: 0.0953627800108476, 403: 0.204670325882456, 216: 0.816039345560555},
             188: {336: 0.207278867723668, 189: 0.423835797263149, 135: 0.835811877045488},
             189: {340: 0.342547597409475, 188: 0.423835797263149, 421: 0.482046359374213},
             190: {423: 0.377265302282295, 341: 0.335163509544295, 134: 0.578068795639768, 421: 0.25979985036771},
             191: {192: 0.996180630060019, 8: 0.786645212957485, 341: 0.273303516898546},
             192: {193: 0.441525927972462, 194: 0.609690476275434, 314: 0.569400935144845,
                   191: 0.996180630060019},
             193: {192: 0.441525927972462, 195: 0.770088567544337},
             194: {192: 0.609690476275434, 312: 0.849133676649369, 196: 0.887075809031058,
                   301: 0.836623014565109},
             195: {193: 0.770088567544337, 196: 0.673391471433385, 197: 0.861976742636636},
             196: {194: 0.887075809031058, 195: 0.673391471433385, 414: 0.431956485354492},
             197: {195: 0.861976742636636, 198: 0.443022294627534, 199: 0.394937925281456},
             198: {417: 0.209134539040814, 197: 0.443022294627534, 433: 0.49474315599118},
             199: {64: 0.867096783661718, 433: 0.294839099076527, 197: 0.394937925281456},
             200: {19: 0.161459000871089, 18: 0.226005175390068, 11: 0.145196300488978},
             201: {124: 0.494119383718756, 202: 0.299281170866472, 204: 0.557854714919758,
                   205: 0.120314071018796},
             202: {201: 0.299281170866472, 371: 0.152367998071292, 236: 0.533971402614441, 222: 0.71164228299206},
             203: {80: 0.233334543824575, 204: 0.166800196131652, 205: 0.470265395802487},
             204: {201: 0.557854714919758, 203: 0.166800196131652, 206: 0.903532757170716,
                   222: 0.357931487579007},
             205: {201: 0.120314071018796, 203: 0.470265395802487, 127: 0.126739334667995},
             206: {408: 0.185113732867615, 76: 0.228344737876005, 410: 0.416016926174991, 204: 0.903532757170716},
             207: {403: 0.265905529711309, 76: 0.129728283690527, 398: 0.202393134303195, 79: 0.147007478874271},
             208: {410: 0.305521115937953, 211: 0.239804848952341, 332: 0.227713164281227,
                   333: 0.204458965014544},
             209: {210: 0.416016734139754, 100: 0.283031388991704, 405: 0.488385354320797,
                   263: 0.859836709648768},
             210: {209: 0.416016734139754, 211: 0.314578827861166, 102: 0.183895276598054,
                   335: 0.085230281282304},
             211: {208: 0.239804848952341, 128: 0.100981173586291, 210: 0.314578827861166},
             212: {185: 0.0622172382621088, 214: 0.980927297239157},
             213: {184: 0.319797974144766, 185: 0.422331490155333, 426: 0.399549918565484},
             214: {186: 0.186666296699859, 212: 0.980927297239157, 215: 0.596363275415425},
             215: {216: 0.303365351083606, 217: 0.736877061319065, 214: 0.596363275415425},
             216: {186: 0.716394243382668, 107: 0.128333325063217, 404: 0.510543983517504, 187: 0.816039345560555,
                   215: 0.303365351083606},
             217: {400: 0.341057625698112, 218: 1.09634565121906, 215: 0.736877061319065},
             218: {401: 0.173450539966432, 219: 0.360447247747029, 217: 1.09634565121906},
             219: {218: 0.360447247747029, 220: 1.51971772602635, 402: 0.174834191055347},
             220: {219: 1.51971772602635, 373: 0.399615142800183, 5: 0.204823210270258},
             221: {340: 3.19035660678573, 373: 0.447429785642448, 6: 0.21897978557335},
             222: {232: 0.284511110376983, 202: 0.71164228299206, 204: 0.357931487579007, 407: 0.276003636507726},
             223: {224: 0.219203355446149, 337: 0.389568331173395, 408: 0.0833152549174782,
                   407: 0.448256267599636},
             224: {225: 0.198223102459885, 223: 0.219203355446149, 231: 0.11848681337856},
             225: {224: 0.198223102459885, 337: 0.132189486942781, 226: 0.254612943666876, 83: 0.374079584648362},
             226: {225: 0.254612943666876, 227: 0.0967054938531658, 228: 0.0964080500765664,
                   269: 0.597101506356899},
             227: {226: 0.0967054938531658, 228: 0.126720013297723, 231: 0.158965085974253},
             228: {271: 0.590700945099607, 89: 0.459399824901834, 226: 0.0964080500765664, 227: 0.126720013297723,
                   23: 0.738321081387347},
             229: {272: 0.740685165161487, 271: 0.366134929160156, 270: 0.129726305633462,
                   359: 0.142077175474106},
             230: {81: 0.153195715762057, 83: 0.45349536316799, 268: 0.0655224366843455, 405: 0.588601542677058},
             231: {224: 0.11848681337856, 227: 0.158965085974253, 406: 0.56367067646725},
             232: {233: 0.15467969716545, 371: 0.924339444620088, 222: 0.284511110376983, 406: 0.172126357446551},
             233: {232: 0.15467969716545, 89: 0.391915962360779, 234: 1.07667594150131, 84: 0.449295560268477},
             234: {233: 1.07667594150131, 371: 0.223226449396433, 175: 0.134521324332722, 235: 0.374607339311616},
             235: {329: 0.498077771036236, 234: 0.374607339311616, 236: 0.320187884461173,
                   174: 0.119934981369974},
             236: {17: 0.517752807007478, 202: 0.533971402614441, 235: 0.320187884461173},
             237: {329: 0.169404883685329, 331: 0.169404883685329, 244: 0.595688168133866,
                   238: 0.217870615864136},
             238: {242: 0.285586911382857, 237: 0.297119372975818, 239: 0.742876011393762},
             239: {241: 0.235494402951529, 11: 0.394975337717595, 324: 0.366343118328798, 238: 0.742876011393762},
             240: {34: 0.19466346909159, 243: 0.440814613114991, 172: 0.0752148435066984, 14: 0.653587656148277},
             241: {242: 0.602465889223667, 239: 0.235494402951529, 172: 0.254487252844253, 15: 0.353045740346311},
             242: {241: 0.602465889223667, 243: 0.339237014260868, 238: 0.285586911382857},
             243: {240: 0.440814613114991, 33: 0.161518650904463, 242: 0.339237014260868, 244: 0.345997906454565},
             244: {32: 0.152603235071104, 243: 0.345997906454565, 245: 0.688177652690387, 237: 0.595688168133866},
             245: {244: 0.688177652690387, 246: 0.348349785042859, 247: 0.224233246226075},
             246: {282: 0.133119833368118, 20: 0.212774062883711, 245: 0.348349785042859, 277: 0.484423211509588},
             247: {20: 0.347715951850883, 245: 0.224233246226075, 174: 0.130570854728893},
             248: {249: 0.90944940894516, 298: 0.315524425535221, 31: 0.367847558940192},
             249: {248: 0.90944940894516, 297: 0.347399230304634, 250: 0.422002463803086},
             250: {296: 0.318258099109269, 249: 0.422002463803086, 251: 0.404732473481642,
                   343: 0.804464182940894},
             251: {28: 0.40909513514829, 250: 0.404732473481642, 156: 0.700825730304375},
             252: {434: 1.34212763913852, 27: 0.546358229879827, 156: 0.298657913400406, 154: 0.127027778184356},
             253: {296: 1.13852101252665, 379: 0.478249585079497, 342: 0.324418604981439},
             254: {364: 0.59809548592439, 379: 0.405266162936129, 348: 0.74911568307241, 255: 1.04270226257215},
             255: {256: 0.522849662538612, 348: 0.410780589933141, 365: 0.387754082140219, 254: 1.04270226257215},
             256: {90: 2.06925456070587, 347: 0.539695782705404, 255: 0.522849662538612, 63: 0.491831168407387},
             257: {25: 0.416471023199936, 170: 0.334598687505465, 316: 0.769978761520388},
             258: {168: 0.210342570694226, 170: 0.405977212598252, 94: 0.70932112535641},
             259: {272: 0.542208981701304, 260: 0.517844728290603, 261: 0.192612036815109,
                   358: 0.328156954825051},
             260: {51: 1.62284856257133, 259: 0.517844728290603, 390: 0.111463216902716, 169: 0.293642035437177},
             261: {392: 0.181903901017263, 393: 0.195148983130745, 259: 0.192612036815109,
                   390: 0.373859837634045},
             262: {272: 0.25589438717016, 392: 0.383263990702276, 395: 0.0825521596169794,
                   405: 0.455265934974523},
             263: {289: 0.336492945760498, 209: 0.859836709648768, 287: 0.270854115474218,
                   129: 0.329913458835001},
             264: {265: 0.158558316851451, 266: 0.124917127322113, 284: 0.154763924362874,
                   286: 0.247715366953747},
             265: {264: 0.158558316851451, 41: 1.08749554948129, 266: 0.220122666745606, 435: 0.130296820988836},
             266: {264: 0.124917127322113, 265: 0.220122666745606, 393: 0.230892555735681},
             267: {289: 0.424642318944125, 284: 0.337786145655569, 185: 0.437728571181838, 295: 0.41288566332983},
             268: {230: 0.0655224366843455, 269: 0.216823086674676, 270: 0.132731653544178},
             269: {226: 0.597101506356899, 268: 0.216823086674676, 270: 0.274975871210701,
                   271: 0.0839375434067605},
             270: {268: 0.132731653544178, 269: 0.274975871210701, 229: 0.129726305633462},
             271: {228: 0.590700945099607, 269: 0.0839375434067605, 229: 0.366134929160156},
             272: {259: 0.542208981701304, 229: 0.740685165161487, 262: 0.25589438717016},
             273: {274: 0.882365888216757, 388: 0.0859660240183285, 359: 0.0469796897059173},
             274: {273: 0.882365888216757, 389: 0.12754128920835, 358: 0.205849845888982},
             275: {276: 0.484914792072996, 22: 0.34140482907267, 23: 0.612598834914052},
             276: {275: 0.484914792072996, 26: 0.849782394355163, 27: 0.366870262214443},
             277: {278: 0.1504456762666, 283: 0.186901394731022, 21: 0.462125749905571, 246: 0.484423211509588},
             278: {282: 0.429533169078825, 277: 0.1504456762666, 279: 0.452584814708672},
             279: {280: 0.379373923605441, 28: 0.315312700748783, 21: 0.167587636853095, 278: 0.452584814708672},
             280: {281: 0.233221436616394, 279: 0.379373923605441},
             281: {280: 0.233221436616394, 86: 0.104572353647361, 21: 0.444987365455945, 22: 0.362670008133777},
             282: {246: 0.133119833368118, 30: 0.121062013686103, 278: 0.429533169078825},
             283: {84: 0.455585004280606, 20: 0.479135753965211, 277: 0.186901394731022},
             284: {264: 0.154763924362874, 290: 0.453348449500589, 267: 0.337786145655569, 285: 0.24717013487491},
             285: {288: 0.138645505763027, 284: 0.24717013487491, 286: 0.0878560532520409, 287: 0.15579099818421},
             286: {264: 0.247715366953747, 285: 0.0878560532520409, 287: 0.155536058673048},
             287: {285: 0.15579099818421, 286: 0.155536058673048, 263: 0.270854115474218},
             288: {289: 0.0851876095877687, 285: 0.138645505763027},
             289: {288: 0.0851876095877687, 267: 0.424642318944125, 263: 0.336492945760498},
             290: {284: 0.453348449500589, 291: 0.0588630407055798, 292: 0.209370808090602},
             291: {290: 0.0588630407055798, 293: 0.201615671427676},
             292: {290: 0.209370808090602, 293: 0.0579686504302175, 294: 0.412988573550906},
             293: {291: 0.201615671427676, 292: 0.0579686504302175},
             294: {40: 0.357792053715086, 41: 0.215124493556229, 292: 0.412988573550906},
             295: {426: 0.0941467095096917, 267: 0.41288566332983},
             296: {297: 0.434107693509107, 250: 0.318258099109269, 381: 0.331312942301401, 253: 1.13852101252665},
             297: {296: 0.434107693509107, 249: 0.347399230304634, 298: 0.711607541209516},
             298: {248: 0.315524425535221, 297: 0.711607541209516, 299: 1.33230520856221},
             299: {298: 1.33230520856221, 300: 0.721354260739388, 38: 0.646858107078652},
             300: {299: 0.721354260739388, 419: 0.59923151261921, 301: 1.71060596746276, 382: 0.785895081086859},
             301: {194: 0.836623014565109, 300: 1.71060596746276, 302: 3.36510241918558},
             302: {64: 0.930204184608853, 301: 3.36510241918558, 303: 2.17243118304605},
             303: {304: 1.1185365316365, 66: 1.69454706057921, 428: 0.889797756796988, 302: 2.17243118304605},
             304: {305: 2.41782836437485, 67: 1.90241396980492, 318: 0.949166131442327, 303: 1.1185365316365},
             305: {304: 2.41782836437485, 306: 0.902803147735699, 108: 0.65121596079633, 109: 0.394784266807707},
             306: {305: 0.902803147735699, 307: 1.56640908997861, 111: 0.325985567264399},
             307: {306: 1.56640908997861, 67: 3.39205004265527, 180: 1.48322403985038},
             308: {114: 1.42146738102024, 309: 0.604841743100626},
             309: {122: 0.374814774992423, 308: 0.604841743100626, 310: 0.211162724991149},
             310: {311: 1.92118146775395, 309: 0.211162724991149, 119: 1.93680130267345},
             311: {317: 1.40591949351103, 310: 1.92118146775395},
             312: {313: 0.252703057233564, 194: 0.849133676649369, 420: 0.452126381431572},
             313: {312: 0.252703057233564, 314: 0.484236608410027, 36: 0.561520483680188},
             314: {8: 0.471224524950935, 313: 0.484236608410027, 192: 0.569400935144845},
             315: {9: 0.414767618816976, 131: 0.16405348111447, 319: 0.323098587780523},
             316: {257: 0.769978761520388, 26: 0.426580402115447, 63: 0.898746978925582},
             317: {120: 1.14617444819355, 311: 1.40591949351103},
             318: {304: 0.949166131442327, 428: 1.25429703457283, 117: 2.38639492998528},
             319: {320: 0.262297592619108, 321: 0.141914409079485, 315: 0.323098587780523},
             320: {9: 0.408683980325492, 12: 0.199832125966581, 319: 0.262297592619108},
             321: {328: 0.231496112419313, 322: 0.327809219339425, 131: 0.482290670170536,
                   319: 0.141914409079485},
             322: {321: 0.327809219339425, 323: 0.383040112192603, 12: 0.136132008562351,
                   326: 0.0547775179123131},
             323: {322: 0.383040112192603, 324: 0.0952396998519393, 325: 0.094671592948354},
             324: {323: 0.0952396998519393, 12: 0.392645806957113, 239: 0.366343118328798, 15: 0.233116431400672},
             325: {323: 0.094671592948354, 326: 0.315679670440865},
             326: {322: 0.0547775179123131, 325: 0.315679670440865, 327: 0.207522631855822},
             327: {328: 0.257387236036037, 11: 0.946382018049632, 326: 0.207522631855822},
             328: {321: 0.231496112419313, 10: 0.68801028693561, 327: 0.257387236036037},
             329: {330: 0.249644758853412, 235: 0.498077771036236, 237: 0.169404883685329},
             330: {329: 0.249644758853412, 331: 0.214445375983314},
             331: {17: 0.102678579608733, 330: 0.214445375983314, 237: 0.217870615864136},
             332: {208: 0.227713164281227, 404: 0.217799261524241, 398: 0.427054568932711,
                   102: 0.454257545644438},
             333: {208: 0.204458965014544, 337: 0.175576904300111, 408: 0.530595521317916,
                   334: 0.286037150977794},
             334: {128: 0.0776415151258508, 82: 0.0966963305600349, 333: 0.286037150977794},
             335: {128: 0.360310952964865, 81: 0.106435265662082, 210: 0.085230281282304},
             336: {10: 0.354345339838707, 188: 0.207278867723668, 135: 0.863076062574328},
             337: {225: 0.132189486942781, 82: 0.376973295482337, 333: 0.175576904300111, 223: 0.389568331173395},
             338: {136: 1.49727780630657, 339: 0.366882661142403, 44: 0.885646385004138},
             339: {338: 0.366882661142403, 374: 0.726646234421273, 143: 0.699839438325404},
             340: {221: 3.19035660678573, 430: 1.22322662146261, 189: 0.342547597409475},
             341: {190: 0.335163509544295, 191: 0.273303516898546},
             342: {153: 0.124338844974692, 253: 0.324418604981439, 343: 0.300044517827278},
             343: {152: 0.131930306759024, 250: 0.804464182940894, 342: 0.300044517827278},
             344: {345: 0.357541518037277, 161: 0.533319062593778},
             345: {344: 0.357541518037277, 163: 0.95859903518266},
             346: {162: 2.03731684208763, 58: 2.30666384040694},
             347: {256: 0.539695782705404, 348: 0.586002450589237},
             348: {347: 0.586002450589237, 254: 0.74911568307241, 255: 0.410780589933141},
             349: {350: 0.51544001625955},
             350: {349: 0.51544001625955, 357: 1.65909568881813},
             351: {352: 0.449263538283702, 354: 0.179536054561264, 355: 0.553522718228126, 47: 0.331606401213137},
             352: {353: 0.0865612481126967, 363: 0.504576648782489, 351: 0.449263538283702},
             353: {352: 0.0865612481126967, 354: 0.33310024214938},
             354: {353: 0.33310024214938, 351: 0.179536054561264},
             355: {356: 0.127124596010943, 351: 0.553522718228126},
             356: {42: 1.29097961418918, 355: 0.127124596010943, 47: 0.424739719752445},
             357: {378: 0.352459718306648, 382: 2.52556160926982, 350: 1.65909568881813},
             358: {274: 0.205849845888982, 259: 0.328156954825051, 359: 1.02502596247418},
             359: {273: 0.0469796897059173, 229: 0.142077175474106, 358: 1.02502596247418},
             360: {361: 0.174327412516582, 171: 0.117026708774484},
             361: {360: 0.174327412516582, 362: 0.188623064040501, 164: 0.792802954995246},
             362: {361: 0.188623064040501, 171: 0.35392385082856},
             363: {352: 0.504576648782489, 49: 0.468464885200311},
             364: {434: 0.398444001040352, 365: 0.875486728208056, 254: 0.59809548592439},
             365: {364: 0.875486728208056, 62: 0.369223404994207, 255: 0.387754082140219},
             366: {434: 0.492017954601896, 62: 0.392134871818312},
             367: {160: 0.957225278842597, 368: 0.391554126373557, 159: 1.1707120539029},
             368: {367: 0.391554126373557},
             369: {370: 0.413058498932798, 179: 0.293203875871861, 93: 0.292801570737626},
             370: {369: 0.413058498932798, 92: 0.316808102172516},
             371: {232: 0.924339444620088, 202: 0.152367998071292, 234: 0.223226449396433},
             372: {373: 0.160276081826669, 6: 0.324523905811511, 5: 0.479269324684528},
             373: {220: 0.399615142800183, 372: 0.160276081826669, 221: 0.447429785642448},
             374: {137: 0.832311892701239, 339: 0.726646234421273, 375: 0.192270240444758},
             375: {374: 0.192270240444758},
             376: {377: 0.833171494819905},
             377: {376: 0.833171494819905, 378: 0.413179133998717, 380: 0.342135692043396},
             378: {377: 0.413179133998717, 357: 0.352459718306648, 381: 0.257153778936649},
             379: {253: 0.478249585079497, 254: 0.405266162936129},
             380: {377: 0.342135692043396, 381: 0.530389741355672},
             381: {296: 0.331312942301401, 378: 0.257153778936649, 380: 0.530389741355672},
             382: {300: 0.785895081086859, 357: 2.52556160926982},
             383: {384: 0.289897214287696, 29: 0.146503694820379, 30: 0.123953494923005},
             384: {385: 0.125794154204752, 386: 0.2637011316352, 383: 0.289897214287696},
             385: {384: 0.125794154204752, 32: 0.746219681415454, 30: 0.285729707759964},
             386: {384: 0.2637011316352, 387: 0.219799038018938},
             387: {386: 0.219799038018938, 29: 0.460600730585724, 31: 0.59964796289411},
             388: {24: 0.128409613183633, 273: 0.0859660240183285, 389: 0.805440569086595},
             389: {25: 0.214196040095418, 274: 0.12754128920835, 388: 0.805440569086595},
             390: {435: 0.489759236904919, 260: 0.111463216902716, 261: 0.373859837634045},
             391: {392: 0.111792736316221, 394: 0.119154003669486, 395: 0.432709379392967},
             392: {261: 0.181903901017263, 262: 0.383263990702276, 391: 0.111792736316221},
             393: {266: 0.230892555735681, 261: 0.195148983130745, 394: 0.142949827534319},
             394: {129: 0.494355107248865, 391: 0.119154003669486, 393: 0.142949827534319},
             395: {129: 0.0779012414879846, 262: 0.0825521596169794, 391: 0.432709379392967},
             396: {397: 0.0593446665674912, 102: 0.164952031722695},
             397: {100: 0.311417857418235, 396: 0.0593446665674912},
             398: {409: 0.159104583036864, 332: 0.427054568932711, 207: 0.202393134303195},
             399: {400: 0.408242163018377, 0: 0.0835480208965531, 401: 0.312211916425383},
             400: {217: 0.341057625698112, 187: 0.0953627800108476, 399: 0.408242163018377},
             401: {1: 0.0965991104837438, 402: 0.357312433933026, 218: 0.173450539966432, 399: 0.312211916425383},
             402: {401: 0.357312433933026, 2: 0.0886849861272248, 219: 0.174834191055347},
             403: {187: 0.204670325882456, 207: 0.265905529711309},
             404: {216: 0.510543983517504, 332: 0.217799261524241, 103: 0.327873429904537},
             405: {209: 0.488385354320797, 230: 0.588601542677058, 262: 0.455265934974523},
             406: {232: 0.172126357446551, 231: 0.56367067646725, 407: 0.254804264739851},
             407: {222: 0.276003636507726, 406: 0.254804264739851, 223: 0.448256267599636},
             408: {333: 0.530595521317916, 206: 0.185113732867615, 223: 0.0833152549174782},
             409: {410: 0.189831311771143, 398: 0.159104583036864},
             410: {208: 0.305521115937953, 409: 0.189831311771143, 76: 0.396515964416368, 206: 0.416016926174991},
             411: {49: 0.482684982085282},
             412: {177: 0.522092910353022, 52: 0.245793875689568, 413: 0.180115020865868},
             413: {178: 0.523292200671836, 412: 0.180115020865868, 95: 0.221906919294244},
             414: {417: 0.341800057911993, 196: 0.431956485354492, 415: 0.209993670447799},
             415: {416: 0.337954125175428, 414: 0.209993670447799},
             416: {417: 0.211542835695277, 415: 0.337954125175428},
             417: {416: 0.211542835695277, 414: 0.341800057911993, 198: 0.209134539040814},
             418: {419: 0.181155911334295, 420: 0.266456826553609},
             419: {418: 0.181155911334295, 300: 0.59923151261921, 37: 0.239183531192535},
             420: {312: 0.452126381431572, 418: 0.266456826553609, 37: 0.192315798871929},
             421: {422: 0.442199030440124, 190: 0.25979985036771, 189: 0.482046359374213},
             422: {421: 0.442199030440124, 423: 0.221568093625154},
             423: {430: 0.422754618401456, 422: 0.221568093625154, 190: 0.377265302282295},
             424: {425: 0.295890229562201, 183: 0.125575412628426},
             425: {424: 0.295890229562201, 130: 0.0897414226733588, 132: 0.0706869008167966},
             426: {40: 0.302889642866584, 213: 0.399549918565484, 295: 0.0941467095096917},
             427: {42: 0.283267255175122, 54: 1.24430911240219},
             428: {318: 1.25429703457283, 303: 0.889797756796988},
             429: {64: 0.376342181781275}, 430: {340: 1.22322662146261, 423: 0.422754618401456},
             431: {60: 0.665844984513799, 53: 2.7137797862091, 55: 0.776626315846115},
             432: {122: 1.43020527231666},
             433: {198: 0.49474315599118, 199: 0.294839099076527},
             434: {252: 1.34212763913852, 364: 0.398444001040352, 366: 0.492017954601896},
             435: {265: 0.130296820988836, 390: 0.489759236904919}}
    mysql = DB()
    speeddata = dict()
    for k in range(B, B+130, 10):
        # print(k)
        result_speed = mysql.get_mysql("select * from averagespeed2014%04d" % C[0] + "  WHERE time_minute = %d" % k)
        speed = []
        for (index, re) in enumerate(result_speed):
            if re[2] == 0:
                a = 50
            else:
                a = re[2]
            speed.append(a)
            speeddata[k] = speed
    # print(len(speeddata))
    parentlist = []
    distencelist = []
    for i in range(len(A)-1):
        temporarydisset = []
        temporaryparset = []
        for index in range(len(A[i])):
            kk = A[i][index][1]
            newminute = B + (int(kk) // 10) * 10  # B就是初始时间
            parent, distence = dijkstra1(graph, A[i][index][0], newminute, speeddata)
            temporarydisset.append(distence)
            temporaryparset.append(parent)
        parentlist.append(temporaryparset)
        distencelist.append(temporarydisset)
        for index1 in range(len(A[i+1])):
            comperlist = []
            for k in range(len(A[i])):
                comperlist.append(temporarydisset[k][A[i+1][index1][0]]+A[i][k][1])
            A[i+1][index1][1] = min(comperlist)
            A[i+1][index1][2] = comperlist.index(min(comperlist))
    # print(A[-1][0][1])
    qqq = A[-1][0][1]
    startindex = A[-1][0][2]
    endpoint = [A[-1][0][0]]
    indexset = []
    indexset1 = []
    alldis = 0
    alldis1 = 0
    alldiscount = 1
    num = B
    roa = []
    for k in range(len(A)-2, -1, -1):
        indexset.append(parentlist[k][startindex])
        indexset1.append(startindex)
        endpoint.append(A[k][startindex][0])
        startindex = A[k][startindex][2]
    # print(len(indexset), endpoint)
    for j in range(len(endpoint)-1):
        startpoint = endpoint[j]
        vetrex = []
        while startpoint != None:
            vetrex.append(startpoint)
            startpoint = indexset[j][startpoint]
        for n in range(len(vetrex) - 1, 0, -1):
            for l in range(len(b)):
                if (b[l][0] == vetrex[n] and b[l][1] == vetrex[n - 1]) or (b[l][0] == vetrex[n - 1] and b[l][1] == vetrex[n]):
                    roa.append(l)
                    alldis = alldis + graph[b[l][0]][b[l][1]]
                    if alldis1 > alldiscount*10:
                        alldiscount = alldiscount+1
                        num = num + (alldiscount-1) * 10
                    else:
                        num = num
                    alldis1 = alldis1 + graph[b[l][0]][b[l][1]] / speeddata[num][l] * 60
    indexset1.pop()
    biubiu = dynamicsearchroad_d(A, B, speeddata)
    # print(roa, indexset1, qqq, alldis, alldis1)
    return [roa, indexset1, [alldis, qqq], biubiu]


def dynamicsearchroad_d(A, B, C):
    b = [[45, 44], [45, 50], [44, 184], [184, 213], [213, 185], [185, 186], [186, 216], [216, 187], [187, 0], [0, 1], [1, 2], [2, 3], [3, 4], [4, 5], [5, 372], [372, 6], [6, 7], [7, 135], [64, 65], [65, 66], [66, 181], [181, 67], [67, 307], [307, 180], [180, 122], [122, 123], [122, 309], [309, 308], [309, 310], [190, 423], [421, 422], [423, 422], [185, 212], [212, 214], [186, 214], [214, 215], [216, 215], [401, 218], [218, 219], [401, 402], [2, 402], [402, 219], [219, 220], [5, 220], [220, 373], [372, 373], [373, 221], [6, 221], [221, 340], [189, 340], [411, 49], [49, 50], [49, 48], [48, 46], [46, 45], [46, 43], [43, 44], [43, 40], [40, 184], [40, 426], [426, 213], [426, 295], [295, 267], [267, 185], [267, 289], [289, 263], [263, 209], [209, 100], [100, 101], [101, 104], [104, 186], [104, 105], [100, 397], [209, 210], [397, 396], [210, 102], [396, 102], [102, 103], [105, 103], [103, 107], [107, 216], [107, 106], [210, 211], [211, 208], [208, 332], [102, 332], [332, 404], [103, 404], [404, 216], [208, 410], [410, 409], [410, 206], [410, 76], [409, 398], [206, 76], [76, 207], [398, 207], [207, 403], [403, 187], [207, 79], [79, 0], [76, 77], [77, 78], [78, 79], [78, 2], [78, 80], [80, 3], [18, 200], [19, 200], [48, 47], [46, 47], [47, 356], [356, 42], [42, 43], [42, 41], [41, 294], [294, 292], [292, 290], [292, 293], [293, 291], [291, 290], [294, 40], [41, 265], [391, 392], [392, 262], [262, 395], [391, 395], [395, 129], [394, 129], [129, 263], [262, 405], [83, 82], [82, 81], [82, 334], [334, 128], [128, 335], [128, 211], [83, 225], [225, 337], [337, 82], [337, 333], [333, 334], [333, 208], [225, 224], [224, 223], [223, 337], [135, 188], [188, 189], [189, 421], [421, 190], [190, 341], [341, 191], [191, 192], [192, 193], [193, 195], [195, 197], [197, 199], [199, 64], [215, 217], [187, 400], [400, 217], [217, 218], [400, 399], [0, 399], [399, 401], [1, 401], [206, 204], [204, 203], [203, 80], [204, 201], [201, 205], [205, 203], [205, 127], [127, 4], [127, 125], [201, 124], [124, 125], [124, 16], [16, 126], [126, 125], [126, 6], [16, 18], [18, 19], [19, 7], [265, 264], [264, 284], [284, 290], [264, 286], [286, 287], [285, 286], [287, 285], [285, 284], [287, 263], [285, 288], [288, 289], [265, 266], [264, 266], [266, 393], [393, 394], [394, 391], [393, 261], [261, 392], [405, 209], [405, 230], [230, 81], [81, 335], [335, 210], [230, 83], [336, 135], [10, 134], [134, 190], [261, 390], [261, 259], [259, 272], [272, 229], [229, 270], [229, 271], [271, 269], [269, 270], [270, 268], [269, 268], [268, 230], [271, 228], [228, 227], [228, 226], [227, 226], [226, 269], [228, 89], [89, 233], [233, 232], [329, 237], [237, 331], [331, 330], [331, 17], [237, 238], [238, 239], [239, 11], [239, 324], [324, 323], [323, 325], [324, 12], [12, 322], [322, 323], [322, 326], [326, 325], [326, 327], [12, 320], [320, 319], [319, 321], [321, 322], [321, 328], [320, 9], [9, 315], [315, 319], [315, 131], [131, 321], [131, 133], [133, 10], [133, 132], [132, 134], [132, 425], [425, 130], [130, 131], [54, 98], [98, 51], [51, 260], [260, 390], [260, 259], [53, 54], [53, 97], [97, 96], [96, 98], [97, 177], [177, 178], [178, 96], [177, 412], [412, 413], [413, 413], [413, 178], [412, 52], [52, 95], [95, 413], [95, 51], [52, 94], [94, 258], [258, 168], [168, 169], [169, 260], [258, 170], [170, 167], [167, 168], [170, 257], [223, 408], [408, 333], [408, 206], [351, 354], [351, 352], [354, 353], [353, 352], [363, 49], [352, 363], [356, 355], [351, 355], [42, 427], [55, 54], [54, 427], [257, 25], [25, 389], [389, 274], [274, 358], [358, 259], [25, 24], [24, 388], [388, 389], [388, 273], [273, 274], [273, 359], [359, 358], [359, 229], [24, 23], [23, 228], [23, 275], [275, 22], [22, 281], [281, 21], [281, 86], [86, 85], [21, 84], [85, 84], [84, 233], [85, 87], [21, 277], [277, 283], [283, 84], [277, 246], [246, 20], [20, 283], [20, 175], [175, 234], [246, 245], [245, 247], [247, 20], [247, 174], [174, 175], [174, 235], [245, 244], [244, 237], [244, 243], [243, 242], [242, 238], [166, 61], [61, 99], [99, 165], [99, 53], [61, 91], [91, 90], [91, 92], [90, 93], [93, 92], [92, 370], [93, 369], [369, 370], [27, 28], [28, 279], [279, 21], [279, 280], [280, 281], [28, 29], [29, 383], [383, 30], [30, 282], [282, 246], [282, 278], [278, 277], [278, 279], [29, 387], [387, 31], [35, 69], [69, 68], [68, 13], [68, 72], [72, 75], [72, 73], [31, 39], [39, 38], [38, 35], [38, 70], [70, 69], [70, 37], [37, 71], [71, 69], [71, 36], [36, 68], [36, 74], [74, 72], [74, 8], [37, 420], [420, 312], [312, 313], [313, 314], [313, 36], [312, 194], [194, 192], [194, 196], [196, 195], [196, 414], [414, 417], [417, 198], [198, 197], [414, 415], [415, 416], [416, 417], [62, 366], [252, 27], [252, 156], [156, 251], [251, 28], [255, 254], [254, 364], [364, 365], [254, 379], [379, 253], [253, 342], [342, 153], [153, 154], [154, 252], [154, 155], [155, 156], [155, 152], [153, 152], [152, 343], [342, 343], [343, 250], [250, 251], [253, 296], [296, 250], [296, 297], [223, 407], [407, 222], [222, 204], [222, 202], [202, 201], [236, 202], [236, 17], [17, 16], [17, 11], [11, 200], [11, 327], [327, 328], [328, 10], [10, 336], [336, 188], [227, 231], [231, 224], [226, 225], [232, 406], [406, 231], [232, 222], [233, 234], [234, 371], [371, 232], [371, 202], [234, 235], [235, 329], [329, 237], [329, 330], [130, 183], [183, 424], [424, 425], [9, 73], [73, 8], [8, 191], [8, 314], [314, 192], [47, 351], [369, 179], [179, 94], [90, 256], [256, 63], [256, 255], [255, 365], [365, 62], [62, 63], [63, 316], [316, 257], [316, 26], [26, 25], [26, 23], [26, 276], [276, 275], [276, 27], [27, 22], [297, 249], [250, 249], [297, 298], [298, 248], [249, 248], [248, 31], [298, 299], [302, 64], [302, 303], [303, 66], [181, 182], [303, 304], [304, 67], [304, 305], [305, 306], [306, 307], [305, 108], [108, 111], [111, 306], [317, 311], [311, 310], [171, 362], [171, 61], [171, 360], [360, 361], [361, 362], [361, 164], [256, 347], [347, 348], [348, 255], [381, 296], [381, 380], [381, 378], [378, 377], [377, 380], [377, 376], [378, 357], [357, 382], [382, 300], [357, 350], [350, 349], [166, 60], [60, 158], [60, 157], [157, 158], [157, 59], [59, 58], [58, 57], [58, 346], [57, 162], [162, 163], [163, 345], [345, 344], [163, 160], [344, 161], [160, 161], [161, 176], [56, 57], [44, 338], [338, 136], [338, 339], [137, 374], [374, 339], [374, 375], [339, 143], [143, 144], [143, 142], [137, 142], [137, 140], [136, 138], [138, 140], [140, 141], [141, 142], [138, 139], [139, 149], [149, 150], [150, 148], [148, 141], [150, 151], [151, 147], [148, 147], [147, 146], [147, 145], [145, 146], [144, 145], [241, 239], [241, 242], [123, 112], [303, 428], [385, 30], [86, 88], [87, 88], [88, 89], [243, 240], [240, 172], [172, 241], [240, 14], [14, 173], [173, 172], [173, 15], [14, 9], [166, 165], [387, 386], [386, 384], [384, 383], [384, 385], [31, 32], [32, 385], [32, 33], [32, 244], [33, 243], [33, 34], [34, 240], [34, 35], [35, 13], [13, 75], [75, 9], [299, 38], [299, 300], [300, 419], [419, 37], [419, 418], [418, 420], [300, 301], [301, 194], [301, 302], [108, 112], [112, 111], [112, 113], [113, 110], [110, 108], [110, 109], [109, 305], [113, 114], [114, 115], [115, 110], [115, 116], [116, 109], [114, 119], [119, 121], [121, 115], [116, 117], [117, 118], [118, 121], [118, 120], [120, 119], [117, 318], [318, 304], [120, 317], [160, 367], [367, 368], [159, 367], [159, 176], [159, 56], [56, 55], [15, 12], [310, 119], [308, 114], [140, 149], [284, 267], [241, 15], [15, 324], [64, 429], [423, 430], [430, 340], [318, 428], [431, 53], [55, 431], [431, 60], [34, 39], [65, 66], [346, 162], [262, 272], [198, 433], [433, 199], [432, 122], [366, 434], [434, 252], [434, 364], [235, 236], [407, 406], [137, 136], [254, 348], [265, 435], [390, 435], [398, 332]]

    graph1 = {0: {1: 0.224285094385491, 79: 0.149408395288133, 187: 0.391678622957074, 399: 0.0835480208965531},
             1: {0: 0.224285094385491, 401: 0.0965991104837438, 2: 0.346129331977769},
             2: {1: 0.346129331977769, 402: 0.0886849861272248, 3: 0.53828096810124, 78: 0.207189072806985},
             3: {80: 0.152079546814538, 2: 0.53828096810124, 4: 0.734421860875849},
             4: {3: 0.734421860875849, 5: 0.311988113125024, 127: 0.102837256797613},
             5: {220: 0.204823210270258, 372: 0.479269324684528, 4: 0.311988113125024},
             6: {372: 0.324523905811511, 221: 0.21897978557335, 126: 0.201586582733104, 7: 0.974399038186258},
             7: {19: 0.283412444566773, 6: 0.974399038186258, 135: 0.818839945755207},
             8: {73: 0.56756261688388, 74: 0.282958424226688, 314: 0.471224524950935, 191: 0.786645212957485},
             9: {320: 0.408683980325492, 73: 0.662256200458975, 75: 0.177525181661146, 14: 0.769450867572729,
                 315: 0.414767618816976},
             10: {336: 0.354345339838707, 328: 0.68801028693561, 133: 0.0875360903713851, 134: 0.390129294371201},
             11: {200: 0.145196300488978, 17: 0.960991296995189, 239: 0.394975337717595, 327: 0.946382018049632},
             12: {320: 0.199832125966581, 322: 0.136132008562351, 324: 0.392645806957113, 15: 0.464200420025809},
             13: {35: 0.23902890426301, 75: 0.176255974082331, 68: 0.542368964385193},
             14: {240: 0.653587656148277, 9: 0.769450867572729, 173: 0.0980675525843713},
             15: {241: 0.353045740346311, 324: 0.233116431400672, 173: 0.201912744389766, 12: 0.464200420025809},
             16: {17: 0.283791552661023, 18: 0.752481513438919, 124: 0.554045280874335, 126: 0.173731316001806},
             17: {16: 0.283791552661023, 331: 0.102678579608733, 11: 0.960991296995189, 236: 0.517752807007478},
             18: {200: 0.226005175390068, 16: 0.752481513438919, 19: 0.262814641863992},
             19: {200: 0.161459000871089, 18: 0.262814641863992, 7: 0.283412444566773},
             20: {283: 0.479135753965211, 175: 0.144908789757992, 246: 0.212774062883711, 247: 0.347715951850883},
             21: {281: 0.444987365455945, 84: 0.160357646189596, 277: 0.462125749905571, 279: 0.167587636853095},
             22: {275: 0.34140482907267, 281: 0.362670008133777, 27: 0.444294751183543},
             23: {24: 0.189810937355017, 26: 0.555594446244569, 275: 0.612598834914052, 228: 0.738321081387347},
             24: {25: 0.682785199872119, 388: 0.128409613183633, 23: 0.189810937355017},
             25: {24: 0.682785199872119, 257: 0.416471023199936, 26: 0.689157041075175, 389: 0.214196040095418},
             26: {25: 0.689157041075175, 276: 0.849782394355163, 316: 0.426580402115447, 23: 0.555594446244569},
             27: {252: 0.546358229879827, 276: 0.366870262214443, 22: 0.444294751183543, 28: 0.984256068867829},
             28: {27: 0.984256068867829, 251: 0.40909513514829, 29: 0.77973157266536, 279: 0.315312700748783},
             29: {387: 0.460600730585724, 28: 0.77973157266536, 383: 0.146503694820379},
             30: {385: 0.285729707759964, 282: 0.121062013686103, 383: 0.123953494923005},
             31: {32: 0.3356868117716, 248: 0.367847558940192, 387: 0.59964796289411, 39: 0.906722866429635},
             32: {385: 0.746219681415454, 31: 0.3356868117716, 244: 0.152603235071104, 33: 0.246996783311526},
             33: {32: 0.246996783311526, 34: 0.632520261760245, 243: 0.161518650904463},
             34: {240: 0.19466346909159, 33: 0.632520261760245, 35: 0.869734322334272, 39: 0.324506518506713},
             35: {34: 0.869734322334272, 69: 0.554805281089765, 38: 0.400514921424208, 13: 0.23902890426301},
             36: {313: 0.561520483680188, 74: 0.304858115337732, 68: 0.491765553397677, 71: 0.190985609930131},
             37: {419: 0.239183531192535, 420: 0.192315798871929, 70: 0.57129385223299, 71: 0.159864026774406},
             38: {299: 0.646858107078652, 35: 0.400514921424208, 70: 0.637838591356894, 39: 0.515376042217826},
             39: {34: 0.324506518506713, 38: 0.515376042217826, 31: 0.906722866429635},
             40: {184: 0.358354985734951, 426: 0.302889642866584, 43: 0.982384164285611, 294: 0.357792053715086},
             41: {265: 1.08749554948129, 42: 0.795952680399793, 294: 0.215124493556229},
             42: {41: 0.795952680399793, 427: 0.283267255175122, 356: 1.29097961418918, 43: 0.433263439248678},
             43: {40: 0.982384164285611, 42: 0.433263439248678, 44: 0.250859625714059, 46: 1.75354662383657},
             44: {184: 0.919845891030154, 338: 0.885646385004138, 43: 0.250859625714059, 45: 1.65400077144655},
             45: {50: 0.918320413436187, 44: 1.65400077144655, 46: 0.23145221789096},
             46: {48: 0.447989835776544, 43: 1.75354662383657, 45: 0.23145221789096, 47: 0.137371844420961},
             47: {48: 0.378071473663263, 356: 0.424739719752445, 46: 0.137371844420961, 351: 0.331606401213137},
             48: {49: 0.527020141692071, 46: 0.447989835776544, 47: 0.378071473663263},
             49: {48: 0.527020141692071, 50: 0.306715397524556, 363: 0.468464885200311, 411: 0.482684982085282},
             50: {49: 0.306715397524556, 45: 0.918320413436187},
             51: {98: 1.04608127017261, 260: 1.62284856257133, 95: 0.285044476226383},
             52: {412: 0.245793875689568, 94: 0.969830321080682, 95: 0.181549559682669},
             53: {97: 0.529157353379161, 99: 0.718906878269652, 54: 0.452269331205574, 431: 2.7137797862091},
             54: {98: 0.393861036155737, 427: 1.24430911240219, 53: 0.452269331205574, 55: 2.38637084373488},
             55: {56: 2.03643824799509, 54: 2.38637084373488, 431: 0.776626315846115},
             56: {57: 0.966333093864362, 159: 1.57201159578001, 55: 2.03643824799509},
             57: {56: 0.966333093864362, 162: 3.51820091676642, 58: 0.389592087750958},
             58: {57: 0.389592087750958, 346: 2.30666384040694, 59: 1.15754315815645},
             59: {58: 1.15754315815645, 157: 0.694132114005516},
             60: {431: 0.665844984513799, 157: 0.258742458947742, 166: 0.81444201010584, 158: 0.526594825089464},
             61: {99: 0.390037372665688, 91: 1.83221143293478, 171: 0.326443613922791, 166: 1.76178536110562},
             62: {365: 0.369223404994207, 366: 0.392134871818312, 63: 0.138334228787085},
             63: {256: 0.491831168407387, 316: 0.898746978925582, 62: 0.138334228787085},
             64: {65: 1.96571242848068, 429: 0.376342181781275, 302: 0.930204184608853, 199: 0.867096783661718},
             65: {64: 1.96571242848068, 66: 0.707525143324705},
             66: {65: 0.707525143324705, 181: 0.924828124906173, 303: 0.543694815881759},
             67: {304: 1.90241396980492, 307: 3.39205004265527, 181: 0.941906549521915},
             68: {72: 0.245727805208249, 36: 0.491765553397677, 69: 0.226265904334626, 13: 0.542368964385193},
             69: {35: 0.554805281089765, 68: 0.226265904334626, 70: 0.25213374780311, 71: 0.508134542117803},
             70: {37: 0.57129385223299, 38: 0.637838591356894, 69: 0.25213374780311},
             71: {36: 0.190985609930131, 69: 0.508134542117803, 37: 0.159864026774406},
             72: {73: 0.249462215644126, 74: 0.539119230022811, 75: 0.589785042432223, 68: 0.245727805208249},
             73: {72: 0.249462215644126, 9: 0.662256200458975, 8: 0.56756261688388},
             74: {72: 0.539119230022811, 8: 0.282958424226688, 36: 0.304858115337732},
             75: {72: 0.589785042432223, 9: 0.177525181661146, 13: 0.176255974082331},
             76: {410: 0.396515964416368, 77: 0.353912515174393, 206: 0.228344737876005, 207: 0.129728283690527},
             77: {76: 0.353912515174393, 78: 0.119913014106472},
             78: {80: 0.583203576652014, 2: 0.207189072806985, 77: 0.119913014106472, 79: 0.439077176318045},
             79: {0: 0.149408395288133, 78: 0.439077176318045, 207: 0.147007478874271},
             80: {3: 0.152079546814538, 78: 0.583203576652014, 203: 0.233334543824575},
             81: {82: 0.438510671723605, 230: 0.153195715762057, 335: 0.106435265662082},
             82: {81: 0.438510671723605, 83: 0.11578156265141, 334: 0.0966963305600349, 337: 0.376973295482337},
             83: {225: 0.374079584648362, 82: 0.11578156265141, 230: 0.45349536316799},
             84: {233: 0.449295560268477, 283: 0.455585004280606, 85: 0.183727371305341, 21: 0.160357646189596},
             85: {84: 0.183727371305341, 86: 0.199771891057524, 87: 0.302577581457305},
             86: {88: 0.271259155762651, 281: 0.104572353647361, 85: 0.199771891057524},
             87: {88: 0.145372302896793, 85: 0.302577581457305},
             88: {89: 0.234316123692473, 86: 0.271259155762651, 87: 0.145372302896793},
             89: {88: 0.234316123692473, 233: 0.391915962360779, 228: 0.459399824901834},
             90: {256: 2.06925456070587, 91: 0.579968656906652, 93: 0.127285492924163},
             91: {90: 0.579968656906652, 92: 0.280106850556102, 61: 1.83221143293478},
             92: {370: 0.316808102172516, 91: 0.280106850556102, 93: 0.464526345244372},
             93: {369: 0.292801570737626, 90: 0.127285492924163, 92: 0.464526345244372},
             94: {258: 0.70932112535641, 179: 0.367194931720079, 52: 0.969830321080682},
             95: {51: 0.285044476226383, 52: 0.181549559682669, 413: 0.221906919294244},
             96: {97: 0.186938172636107, 98: 0.267419775751268, 178: 0.239198684368233},
             97: {96: 0.186938172636107, 177: 0.23328565230024, 53: 0.529157353379161},
             98: {96: 0.267419775751268, 51: 1.04608127017261, 54: 0.393861036155737},
             99: {165: 1.39050110646662, 53: 0.718906878269652, 61: 0.390037372665688},
             100: {209: 0.283031388991704, 101: 0.0712993698400632, 397: 0.311417857418235},
             101: {104: 0.120420350088937, 100: 0.0712993698400632},
             102: {396: 0.164952031722695, 210: 0.183895276598054, 332: 0.454257545644438,
                   103: 0.182757931122691},
             103: {105: 0.265809220296463, 107: 0.199345515091881, 404: 0.327873429904537,
                   102: 0.182757931122691},
             104: {105: 0.300566722275626, 186: 0.424466414337713, 101: 0.120420350088937},
             105: {104: 0.300566722275626, 103: 0.265809220296463}, 106: {107: 0.298429428020782},
             107: {216: 0.128333325063217, 106: 0.298429428020782, 103: 0.199345515091881},
             108: {112: 0.54144010144892, 305: 0.65121596079633, 110: 0.401433937500708, 111: 0.522027005933706},
             109: {305: 0.394784266807707, 116: 0.30171184554946, 110: 0.70819277542913},
             110: {113: 0.564275108180298, 115: 0.307527745791387, 108: 0.401433937500708, 109: 0.70819277542913},
             111: {112: 0.391836876300501, 306: 0.325985567264399, 108: 0.522027005933706},
             112: {113: 0.360781942197145, 123: 1.35301671428682, 108: 0.54144010144892, 111: 0.391836876300501},
             113: {112: 0.360781942197145, 114: 0.317944149651573, 110: 0.564275108180298},
             114: {113: 0.317944149651573, 115: 0.560187742427876, 308: 1.42146738102024, 119: 0.155013133608576},
             115: {121: 0.212301595847583, 114: 0.560187742427876, 116: 0.722155742263166,
                   110: 0.307527745791387},
             116: {115: 0.722155742263166, 117: 0.28810210481872, 109: 0.30171184554946},
             117: {116: 0.28810210481872, 118: 0.658822419514702, 318: 2.38639492998528},
             118: {120: 0.561897625955621, 121: 0.130033362265991, 117: 0.658822419514702},
             119: {120: 0.205597074451193, 121: 0.583050852038617, 114: 0.155013133608576, 310: 1.93680130267345},
             120: {317: 1.14617444819355, 118: 0.561897625955621, 119: 0.205597074451193},
             121: {115: 0.212301595847583, 118: 0.130033362265991, 119: 0.583050852038617},
             122: {432: 1.43020527231666, 123: 0.682850287790564, 180: 0.784157318709935, 309: 0.374814774992423},
             123: {112: 1.35301671428682, 122: 0.682850287790564},
             124: {16: 0.554045280874335, 201: 0.494119383718756, 125: 0.227027167345884},
             125: {124: 0.227027167345884, 126: 0.465449159832096, 127: 0.572264813732885},
             126: {16: 0.173731316001806, 125: 0.465449159832096, 6: 0.201586582733104},
             127: {4: 0.102837256797613, 125: 0.572264813732885, 205: 0.126739334667995},
             128: {211: 0.100981173586291, 334: 0.0776415151258508, 335: 0.360310952964865},
             129: {394: 0.494355107248865, 395: 0.0779012414879846, 263: 0.329913458835001},
             130: {425: 0.0897414226733588, 131: 0.504843040076711, 183: 0.323787110830818},
             131: {321: 0.482290670170536, 130: 0.504843040076711, 315: 0.16405348111447, 133: 0.100045252262838},
             132: {425: 0.0706869008167966, 133: 0.439917433079022, 134: 0.0799816888389501},
             133: {10: 0.0875360903713851, 131: 0.100045252262838, 132: 0.439917433079022},
             134: {10: 0.390129294371201, 132: 0.0799816888389501, 190: 0.578068795639768},
             135: {336: 0.863076062574328, 188: 0.835811877045488, 7: 0.818839945755207},
             136: {137: 0.335542512156344, 338: 1.49727780630657, 138: 1.0641488074221},
             137: {136: 0.335542512156344, 140: 1.00525660632764, 142: 0.471524994283068, 374: 0.832311892701239},
             138: {136: 1.0641488074221, 139: 1.627213818024, 140: 0.244989289887702},
             139: {138: 1.627213818024, 149: 0.299450670557084},
             140: {137: 1.00525660632764, 138: 0.244989289887702, 149: 1.65549719108667, 141: 0.280750134997849},
             141: {140: 0.280750134997849, 148: 0.603173438524901, 142: 0.914144930550114},
             142: {137: 0.471524994283068, 141: 0.914144930550114, 143: 1.51842209558624},
             143: {144: 0.160451011472166, 339: 0.699839438325404, 142: 1.51842209558624},
             144: {145: 2.63443797707343, 143: 0.160451011472166},
             145: {144: 2.63443797707343, 146: 0.464272321369433, 147: 0.444149453220779},
             146: {145: 0.464272321369433, 147: 0.0874475004938308},
             147: {145: 0.444149453220779, 146: 0.0874475004938308, 148: 0.332471117135161,
                   151: 0.873080988531269},
             148: {147: 0.332471117135161, 141: 0.603173438524901, 150: 0.97928049466714},
             149: {139: 0.299450670557084, 140: 1.65549719108667, 150: 0.188004497656454},
             150: {148: 0.97928049466714, 149: 0.188004497656454, 151: 0.294139116655804},
             151: {147: 0.873080988531269, 150: 0.294139116655804},
             152: {153: 0.290940933024284, 155: 0.0712483768892728, 343: 0.131930306759024},
             153: {152: 0.290940933024284, 154: 0.0763330865971258, 342: 0.124338844974692},
             154: {153: 0.0763330865971258, 155: 0.294678808994025, 252: 0.127027778184356},
             155: {152: 0.0712483768892728, 154: 0.294678808994025, 156: 0.123653602792398},
             156: {251: 0.700825730304375, 252: 0.298657913400406, 155: 0.123653602792398},
             157: {59: 0.694132114005516, 60: 0.258742458947742, 158: 0.69800173556639},
             158: {60: 0.526594825089464, 157: 0.69800173556639},
             159: {176: 2.87197362231661, 56: 1.57201159578001, 367: 1.1707120539029},
             160: {161: 1.15490875949099, 163: 0.350727518994123, 367: 0.957225278842597},
             161: {344: 0.533319062593778, 160: 1.15490875949099, 176: 0.476922823063224},
             162: {57: 3.51820091676642, 346: 2.03731684208763, 163: 0.120556607170654},
             163: {160: 0.350727518994123, 345: 0.95859903518266, 162: 0.120556607170654},
             164: {361: 0.792802954995246},
             165: {99: 1.39050110646662, 166: 0.345591795651293},
             166: {60: 0.81444201010584, 61: 1.76178536110562, 165: 0.345591795651293},
             167: {168: 0.373721357262457, 170: 0.175412755791807},
             168: {169: 0.156560223146928, 258: 0.210342570694226, 167: 0.373721357262457},
             169: {168: 0.156560223146928, 260: 0.293642035437177},
             170: {257: 0.334598687505465, 258: 0.405977212598252, 167: 0.175412755791807},
             171: {360: 0.117026708774484, 362: 0.35392385082856, 61: 0.326443613922791},
             172: {240: 0.0752148435066984, 241: 0.254487252844253, 173: 0.597885103238615},
             173: {172: 0.597885103238615, 14: 0.0980675525843713, 15: 0.201912744389766},
             174: {235: 0.119934981369974, 247: 0.130570854728893, 175: 0.317025516915388},
             175: {234: 0.134521324332722, 20: 0.144908789757992, 174: 0.317025516915388},
             176: {161: 0.476922823063224, 159: 2.87197362231661},
             177: {97: 0.23328565230024, 178: 0.179926128907533, 412: 0.522092910353022},
             178: {96: 0.239198684368233, 177: 0.179926128907533, 413: 0.523292200671836},
             179: {369: 0.293203875871861, 94: 0.367194931720079},
             180: {122: 0.784157318709935, 307: 1.48322403985038},
             181: {66: 0.543694815881759, 67: 0.941906549521915, 182: 0.286456596710005},
             182: {181: 0.286456596710005},
             183: {424: 0.125575412628426, 130: 0.323787110830818},
             184: {40: 0.358354985734951, 44: 0.919845891030154, 213: 0.319797974144766},
             185: {186: 1.083373314029, 267: 0.437728571181838, 212: 0.0622172382621088, 213: 0.422331490155333},
             186: {216: 0.716394243382668, 185: 1.083373314029, 214: 0.186666296699859, 104: 0.424466414337713},
             187: {0: 0.391678622957074, 400: 0.0953627800108476, 403: 0.204670325882456, 216: 0.816039345560555},
             188: {336: 0.207278867723668, 189: 0.423835797263149, 135: 0.835811877045488},
             189: {340: 0.342547597409475, 188: 0.423835797263149, 421: 0.482046359374213},
             190: {423: 0.377265302282295, 341: 0.335163509544295, 134: 0.578068795639768, 421: 0.25979985036771},
             191: {192: 0.996180630060019, 8: 0.786645212957485, 341: 0.273303516898546},
             192: {193: 0.441525927972462, 194: 0.609690476275434, 314: 0.569400935144845,
                   191: 0.996180630060019},
             193: {192: 0.441525927972462, 195: 0.770088567544337},
             194: {192: 0.609690476275434, 312: 0.849133676649369, 196: 0.887075809031058,
                   301: 0.836623014565109},
             195: {193: 0.770088567544337, 196: 0.673391471433385, 197: 0.861976742636636},
             196: {194: 0.887075809031058, 195: 0.673391471433385, 414: 0.431956485354492},
             197: {195: 0.861976742636636, 198: 0.443022294627534, 199: 0.394937925281456},
             198: {417: 0.209134539040814, 197: 0.443022294627534, 433: 0.49474315599118},
             199: {64: 0.867096783661718, 433: 0.294839099076527, 197: 0.394937925281456},
             200: {19: 0.161459000871089, 18: 0.226005175390068, 11: 0.145196300488978},
             201: {124: 0.494119383718756, 202: 0.299281170866472, 204: 0.557854714919758,
                   205: 0.120314071018796},
             202: {201: 0.299281170866472, 371: 0.152367998071292, 236: 0.533971402614441, 222: 0.71164228299206},
             203: {80: 0.233334543824575, 204: 0.166800196131652, 205: 0.470265395802487},
             204: {201: 0.557854714919758, 203: 0.166800196131652, 206: 0.903532757170716,
                   222: 0.357931487579007},
             205: {201: 0.120314071018796, 203: 0.470265395802487, 127: 0.126739334667995},
             206: {408: 0.185113732867615, 76: 0.228344737876005, 410: 0.416016926174991, 204: 0.903532757170716},
             207: {403: 0.265905529711309, 76: 0.129728283690527, 398: 0.202393134303195, 79: 0.147007478874271},
             208: {410: 0.305521115937953, 211: 0.239804848952341, 332: 0.227713164281227,
                   333: 0.204458965014544},
             209: {210: 0.416016734139754, 100: 0.283031388991704, 405: 0.488385354320797,
                   263: 0.859836709648768},
             210: {209: 0.416016734139754, 211: 0.314578827861166, 102: 0.183895276598054,
                   335: 0.085230281282304},
             211: {208: 0.239804848952341, 128: 0.100981173586291, 210: 0.314578827861166},
             212: {185: 0.0622172382621088, 214: 0.980927297239157},
             213: {184: 0.319797974144766, 185: 0.422331490155333, 426: 0.399549918565484},
             214: {186: 0.186666296699859, 212: 0.980927297239157, 215: 0.596363275415425},
             215: {216: 0.303365351083606, 217: 0.736877061319065, 214: 0.596363275415425},
             216: {186: 0.716394243382668, 107: 0.128333325063217, 404: 0.510543983517504, 187: 0.816039345560555,
                   215: 0.303365351083606},
             217: {400: 0.341057625698112, 218: 1.09634565121906, 215: 0.736877061319065},
             218: {401: 0.173450539966432, 219: 0.360447247747029, 217: 1.09634565121906},
             219: {218: 0.360447247747029, 220: 1.51971772602635, 402: 0.174834191055347},
             220: {219: 1.51971772602635, 373: 0.399615142800183, 5: 0.204823210270258},
             221: {340: 3.19035660678573, 373: 0.447429785642448, 6: 0.21897978557335},
             222: {232: 0.284511110376983, 202: 0.71164228299206, 204: 0.357931487579007, 407: 0.276003636507726},
             223: {224: 0.219203355446149, 337: 0.389568331173395, 408: 0.0833152549174782,
                   407: 0.448256267599636},
             224: {225: 0.198223102459885, 223: 0.219203355446149, 231: 0.11848681337856},
             225: {224: 0.198223102459885, 337: 0.132189486942781, 226: 0.254612943666876, 83: 0.374079584648362},
             226: {225: 0.254612943666876, 227: 0.0967054938531658, 228: 0.0964080500765664,
                   269: 0.597101506356899},
             227: {226: 0.0967054938531658, 228: 0.126720013297723, 231: 0.158965085974253},
             228: {271: 0.590700945099607, 89: 0.459399824901834, 226: 0.0964080500765664, 227: 0.126720013297723,
                   23: 0.738321081387347},
             229: {272: 0.740685165161487, 271: 0.366134929160156, 270: 0.129726305633462,
                   359: 0.142077175474106},
             230: {81: 0.153195715762057, 83: 0.45349536316799, 268: 0.0655224366843455, 405: 0.588601542677058},
             231: {224: 0.11848681337856, 227: 0.158965085974253, 406: 0.56367067646725},
             232: {233: 0.15467969716545, 371: 0.924339444620088, 222: 0.284511110376983, 406: 0.172126357446551},
             233: {232: 0.15467969716545, 89: 0.391915962360779, 234: 1.07667594150131, 84: 0.449295560268477},
             234: {233: 1.07667594150131, 371: 0.223226449396433, 175: 0.134521324332722, 235: 0.374607339311616},
             235: {329: 0.498077771036236, 234: 0.374607339311616, 236: 0.320187884461173,
                   174: 0.119934981369974},
             236: {17: 0.517752807007478, 202: 0.533971402614441, 235: 0.320187884461173},
             237: {329: 0.169404883685329, 331: 0.169404883685329, 244: 0.595688168133866,
                   238: 0.217870615864136},
             238: {242: 0.285586911382857, 237: 0.297119372975818, 239: 0.742876011393762},
             239: {241: 0.235494402951529, 11: 0.394975337717595, 324: 0.366343118328798, 238: 0.742876011393762},
             240: {34: 0.19466346909159, 243: 0.440814613114991, 172: 0.0752148435066984, 14: 0.653587656148277},
             241: {242: 0.602465889223667, 239: 0.235494402951529, 172: 0.254487252844253, 15: 0.353045740346311},
             242: {241: 0.602465889223667, 243: 0.339237014260868, 238: 0.285586911382857},
             243: {240: 0.440814613114991, 33: 0.161518650904463, 242: 0.339237014260868, 244: 0.345997906454565},
             244: {32: 0.152603235071104, 243: 0.345997906454565, 245: 0.688177652690387, 237: 0.595688168133866},
             245: {244: 0.688177652690387, 246: 0.348349785042859, 247: 0.224233246226075},
             246: {282: 0.133119833368118, 20: 0.212774062883711, 245: 0.348349785042859, 277: 0.484423211509588},
             247: {20: 0.347715951850883, 245: 0.224233246226075, 174: 0.130570854728893},
             248: {249: 0.90944940894516, 298: 0.315524425535221, 31: 0.367847558940192},
             249: {248: 0.90944940894516, 297: 0.347399230304634, 250: 0.422002463803086},
             250: {296: 0.318258099109269, 249: 0.422002463803086, 251: 0.404732473481642,
                   343: 0.804464182940894},
             251: {28: 0.40909513514829, 250: 0.404732473481642, 156: 0.700825730304375},
             252: {434: 1.34212763913852, 27: 0.546358229879827, 156: 0.298657913400406, 154: 0.127027778184356},
             253: {296: 1.13852101252665, 379: 0.478249585079497, 342: 0.324418604981439},
             254: {364: 0.59809548592439, 379: 0.405266162936129, 348: 0.74911568307241, 255: 1.04270226257215},
             255: {256: 0.522849662538612, 348: 0.410780589933141, 365: 0.387754082140219, 254: 1.04270226257215},
             256: {90: 2.06925456070587, 347: 0.539695782705404, 255: 0.522849662538612, 63: 0.491831168407387},
             257: {25: 0.416471023199936, 170: 0.334598687505465, 316: 0.769978761520388},
             258: {168: 0.210342570694226, 170: 0.405977212598252, 94: 0.70932112535641},
             259: {272: 0.542208981701304, 260: 0.517844728290603, 261: 0.192612036815109,
                   358: 0.328156954825051},
             260: {51: 1.62284856257133, 259: 0.517844728290603, 390: 0.111463216902716, 169: 0.293642035437177},
             261: {392: 0.181903901017263, 393: 0.195148983130745, 259: 0.192612036815109,
                   390: 0.373859837634045},
             262: {272: 0.25589438717016, 392: 0.383263990702276, 395: 0.0825521596169794,
                   405: 0.455265934974523},
             263: {289: 0.336492945760498, 209: 0.859836709648768, 287: 0.270854115474218,
                   129: 0.329913458835001},
             264: {265: 0.158558316851451, 266: 0.124917127322113, 284: 0.154763924362874,
                   286: 0.247715366953747},
             265: {264: 0.158558316851451, 41: 1.08749554948129, 266: 0.220122666745606, 435: 0.130296820988836},
             266: {264: 0.124917127322113, 265: 0.220122666745606, 393: 0.230892555735681},
             267: {289: 0.424642318944125, 284: 0.337786145655569, 185: 0.437728571181838, 295: 0.41288566332983},
             268: {230: 0.0655224366843455, 269: 0.216823086674676, 270: 0.132731653544178},
             269: {226: 0.597101506356899, 268: 0.216823086674676, 270: 0.274975871210701,
                   271: 0.0839375434067605},
             270: {268: 0.132731653544178, 269: 0.274975871210701, 229: 0.129726305633462},
             271: {228: 0.590700945099607, 269: 0.0839375434067605, 229: 0.366134929160156},
             272: {259: 0.542208981701304, 229: 0.740685165161487, 262: 0.25589438717016},
             273: {274: 0.882365888216757, 388: 0.0859660240183285, 359: 0.0469796897059173},
             274: {273: 0.882365888216757, 389: 0.12754128920835, 358: 0.205849845888982},
             275: {276: 0.484914792072996, 22: 0.34140482907267, 23: 0.612598834914052},
             276: {275: 0.484914792072996, 26: 0.849782394355163, 27: 0.366870262214443},
             277: {278: 0.1504456762666, 283: 0.186901394731022, 21: 0.462125749905571, 246: 0.484423211509588},
             278: {282: 0.429533169078825, 277: 0.1504456762666, 279: 0.452584814708672},
             279: {280: 0.379373923605441, 28: 0.315312700748783, 21: 0.167587636853095, 278: 0.452584814708672},
             280: {281: 0.233221436616394, 279: 0.379373923605441},
             281: {280: 0.233221436616394, 86: 0.104572353647361, 21: 0.444987365455945, 22: 0.362670008133777},
             282: {246: 0.133119833368118, 30: 0.121062013686103, 278: 0.429533169078825},
             283: {84: 0.455585004280606, 20: 0.479135753965211, 277: 0.186901394731022},
             284: {264: 0.154763924362874, 290: 0.453348449500589, 267: 0.337786145655569, 285: 0.24717013487491},
             285: {288: 0.138645505763027, 284: 0.24717013487491, 286: 0.0878560532520409, 287: 0.15579099818421},
             286: {264: 0.247715366953747, 285: 0.0878560532520409, 287: 0.155536058673048},
             287: {285: 0.15579099818421, 286: 0.155536058673048, 263: 0.270854115474218},
             288: {289: 0.0851876095877687, 285: 0.138645505763027},
             289: {288: 0.0851876095877687, 267: 0.424642318944125, 263: 0.336492945760498},
             290: {284: 0.453348449500589, 291: 0.0588630407055798, 292: 0.209370808090602},
             291: {290: 0.0588630407055798, 293: 0.201615671427676},
             292: {290: 0.209370808090602, 293: 0.0579686504302175, 294: 0.412988573550906},
             293: {291: 0.201615671427676, 292: 0.0579686504302175},
             294: {40: 0.357792053715086, 41: 0.215124493556229, 292: 0.412988573550906},
             295: {426: 0.0941467095096917, 267: 0.41288566332983},
             296: {297: 0.434107693509107, 250: 0.318258099109269, 381: 0.331312942301401, 253: 1.13852101252665},
             297: {296: 0.434107693509107, 249: 0.347399230304634, 298: 0.711607541209516},
             298: {248: 0.315524425535221, 297: 0.711607541209516, 299: 1.33230520856221},
             299: {298: 1.33230520856221, 300: 0.721354260739388, 38: 0.646858107078652},
             300: {299: 0.721354260739388, 419: 0.59923151261921, 301: 1.71060596746276, 382: 0.785895081086859},
             301: {194: 0.836623014565109, 300: 1.71060596746276, 302: 3.36510241918558},
             302: {64: 0.930204184608853, 301: 3.36510241918558, 303: 2.17243118304605},
             303: {304: 1.1185365316365, 66: 1.69454706057921, 428: 0.889797756796988, 302: 2.17243118304605},
             304: {305: 2.41782836437485, 67: 1.90241396980492, 318: 0.949166131442327, 303: 1.1185365316365},
             305: {304: 2.41782836437485, 306: 0.902803147735699, 108: 0.65121596079633, 109: 0.394784266807707},
             306: {305: 0.902803147735699, 307: 1.56640908997861, 111: 0.325985567264399},
             307: {306: 1.56640908997861, 67: 3.39205004265527, 180: 1.48322403985038},
             308: {114: 1.42146738102024, 309: 0.604841743100626},
             309: {122: 0.374814774992423, 308: 0.604841743100626, 310: 0.211162724991149},
             310: {311: 1.92118146775395, 309: 0.211162724991149, 119: 1.93680130267345},
             311: {317: 1.40591949351103, 310: 1.92118146775395},
             312: {313: 0.252703057233564, 194: 0.849133676649369, 420: 0.452126381431572},
             313: {312: 0.252703057233564, 314: 0.484236608410027, 36: 0.561520483680188},
             314: {8: 0.471224524950935, 313: 0.484236608410027, 192: 0.569400935144845},
             315: {9: 0.414767618816976, 131: 0.16405348111447, 319: 0.323098587780523},
             316: {257: 0.769978761520388, 26: 0.426580402115447, 63: 0.898746978925582},
             317: {120: 1.14617444819355, 311: 1.40591949351103},
             318: {304: 0.949166131442327, 428: 1.25429703457283, 117: 2.38639492998528},
             319: {320: 0.262297592619108, 321: 0.141914409079485, 315: 0.323098587780523},
             320: {9: 0.408683980325492, 12: 0.199832125966581, 319: 0.262297592619108},
             321: {328: 0.231496112419313, 322: 0.327809219339425, 131: 0.482290670170536,
                   319: 0.141914409079485},
             322: {321: 0.327809219339425, 323: 0.383040112192603, 12: 0.136132008562351,
                   326: 0.0547775179123131},
             323: {322: 0.383040112192603, 324: 0.0952396998519393, 325: 0.094671592948354},
             324: {323: 0.0952396998519393, 12: 0.392645806957113, 239: 0.366343118328798, 15: 0.233116431400672},
             325: {323: 0.094671592948354, 326: 0.315679670440865},
             326: {322: 0.0547775179123131, 325: 0.315679670440865, 327: 0.207522631855822},
             327: {328: 0.257387236036037, 11: 0.946382018049632, 326: 0.207522631855822},
             328: {321: 0.231496112419313, 10: 0.68801028693561, 327: 0.257387236036037},
             329: {330: 0.249644758853412, 235: 0.498077771036236, 237: 0.169404883685329},
             330: {329: 0.249644758853412, 331: 0.214445375983314},
             331: {17: 0.102678579608733, 330: 0.214445375983314, 237: 0.217870615864136},
             332: {208: 0.227713164281227, 404: 0.217799261524241, 398: 0.427054568932711,
                   102: 0.454257545644438},
             333: {208: 0.204458965014544, 337: 0.175576904300111, 408: 0.530595521317916,
                   334: 0.286037150977794},
             334: {128: 0.0776415151258508, 82: 0.0966963305600349, 333: 0.286037150977794},
             335: {128: 0.360310952964865, 81: 0.106435265662082, 210: 0.085230281282304},
             336: {10: 0.354345339838707, 188: 0.207278867723668, 135: 0.863076062574328},
             337: {225: 0.132189486942781, 82: 0.376973295482337, 333: 0.175576904300111, 223: 0.389568331173395},
             338: {136: 1.49727780630657, 339: 0.366882661142403, 44: 0.885646385004138},
             339: {338: 0.366882661142403, 374: 0.726646234421273, 143: 0.699839438325404},
             340: {221: 3.19035660678573, 430: 1.22322662146261, 189: 0.342547597409475},
             341: {190: 0.335163509544295, 191: 0.273303516898546},
             342: {153: 0.124338844974692, 253: 0.324418604981439, 343: 0.300044517827278},
             343: {152: 0.131930306759024, 250: 0.804464182940894, 342: 0.300044517827278},
             344: {345: 0.357541518037277, 161: 0.533319062593778},
             345: {344: 0.357541518037277, 163: 0.95859903518266},
             346: {162: 2.03731684208763, 58: 2.30666384040694},
             347: {256: 0.539695782705404, 348: 0.586002450589237},
             348: {347: 0.586002450589237, 254: 0.74911568307241, 255: 0.410780589933141},
             349: {350: 0.51544001625955},
             350: {349: 0.51544001625955, 357: 1.65909568881813},
             351: {352: 0.449263538283702, 354: 0.179536054561264, 355: 0.553522718228126, 47: 0.331606401213137},
             352: {353: 0.0865612481126967, 363: 0.504576648782489, 351: 0.449263538283702},
             353: {352: 0.0865612481126967, 354: 0.33310024214938},
             354: {353: 0.33310024214938, 351: 0.179536054561264},
             355: {356: 0.127124596010943, 351: 0.553522718228126},
             356: {42: 1.29097961418918, 355: 0.127124596010943, 47: 0.424739719752445},
             357: {378: 0.352459718306648, 382: 2.52556160926982, 350: 1.65909568881813},
             358: {274: 0.205849845888982, 259: 0.328156954825051, 359: 1.02502596247418},
             359: {273: 0.0469796897059173, 229: 0.142077175474106, 358: 1.02502596247418},
             360: {361: 0.174327412516582, 171: 0.117026708774484},
             361: {360: 0.174327412516582, 362: 0.188623064040501, 164: 0.792802954995246},
             362: {361: 0.188623064040501, 171: 0.35392385082856},
             363: {352: 0.504576648782489, 49: 0.468464885200311},
             364: {434: 0.398444001040352, 365: 0.875486728208056, 254: 0.59809548592439},
             365: {364: 0.875486728208056, 62: 0.369223404994207, 255: 0.387754082140219},
             366: {434: 0.492017954601896, 62: 0.392134871818312},
             367: {160: 0.957225278842597, 368: 0.391554126373557, 159: 1.1707120539029},
             368: {367: 0.391554126373557},
             369: {370: 0.413058498932798, 179: 0.293203875871861, 93: 0.292801570737626},
             370: {369: 0.413058498932798, 92: 0.316808102172516},
             371: {232: 0.924339444620088, 202: 0.152367998071292, 234: 0.223226449396433},
             372: {373: 0.160276081826669, 6: 0.324523905811511, 5: 0.479269324684528},
             373: {220: 0.399615142800183, 372: 0.160276081826669, 221: 0.447429785642448},
             374: {137: 0.832311892701239, 339: 0.726646234421273, 375: 0.192270240444758},
             375: {374: 0.192270240444758},
             376: {377: 0.833171494819905},
             377: {376: 0.833171494819905, 378: 0.413179133998717, 380: 0.342135692043396},
             378: {377: 0.413179133998717, 357: 0.352459718306648, 381: 0.257153778936649},
             379: {253: 0.478249585079497, 254: 0.405266162936129},
             380: {377: 0.342135692043396, 381: 0.530389741355672},
             381: {296: 0.331312942301401, 378: 0.257153778936649, 380: 0.530389741355672},
             382: {300: 0.785895081086859, 357: 2.52556160926982},
             383: {384: 0.289897214287696, 29: 0.146503694820379, 30: 0.123953494923005},
             384: {385: 0.125794154204752, 386: 0.2637011316352, 383: 0.289897214287696},
             385: {384: 0.125794154204752, 32: 0.746219681415454, 30: 0.285729707759964},
             386: {384: 0.2637011316352, 387: 0.219799038018938},
             387: {386: 0.219799038018938, 29: 0.460600730585724, 31: 0.59964796289411},
             388: {24: 0.128409613183633, 273: 0.0859660240183285, 389: 0.805440569086595},
             389: {25: 0.214196040095418, 274: 0.12754128920835, 388: 0.805440569086595},
             390: {435: 0.489759236904919, 260: 0.111463216902716, 261: 0.373859837634045},
             391: {392: 0.111792736316221, 394: 0.119154003669486, 395: 0.432709379392967},
             392: {261: 0.181903901017263, 262: 0.383263990702276, 391: 0.111792736316221},
             393: {266: 0.230892555735681, 261: 0.195148983130745, 394: 0.142949827534319},
             394: {129: 0.494355107248865, 391: 0.119154003669486, 393: 0.142949827534319},
             395: {129: 0.0779012414879846, 262: 0.0825521596169794, 391: 0.432709379392967},
             396: {397: 0.0593446665674912, 102: 0.164952031722695},
             397: {100: 0.311417857418235, 396: 0.0593446665674912},
             398: {409: 0.159104583036864, 332: 0.427054568932711, 207: 0.202393134303195},
             399: {400: 0.408242163018377, 0: 0.0835480208965531, 401: 0.312211916425383},
             400: {217: 0.341057625698112, 187: 0.0953627800108476, 399: 0.408242163018377},
             401: {1: 0.0965991104837438, 402: 0.357312433933026, 218: 0.173450539966432, 399: 0.312211916425383},
             402: {401: 0.357312433933026, 2: 0.0886849861272248, 219: 0.174834191055347},
             403: {187: 0.204670325882456, 207: 0.265905529711309},
             404: {216: 0.510543983517504, 332: 0.217799261524241, 103: 0.327873429904537},
             405: {209: 0.488385354320797, 230: 0.588601542677058, 262: 0.455265934974523},
             406: {232: 0.172126357446551, 231: 0.56367067646725, 407: 0.254804264739851},
             407: {222: 0.276003636507726, 406: 0.254804264739851, 223: 0.448256267599636},
             408: {333: 0.530595521317916, 206: 0.185113732867615, 223: 0.0833152549174782},
             409: {410: 0.189831311771143, 398: 0.159104583036864},
             410: {208: 0.305521115937953, 409: 0.189831311771143, 76: 0.396515964416368, 206: 0.416016926174991},
             411: {49: 0.482684982085282},
             412: {177: 0.522092910353022, 52: 0.245793875689568, 413: 0.180115020865868},
             413: {178: 0.523292200671836, 412: 0.180115020865868, 95: 0.221906919294244},
             414: {417: 0.341800057911993, 196: 0.431956485354492, 415: 0.209993670447799},
             415: {416: 0.337954125175428, 414: 0.209993670447799},
             416: {417: 0.211542835695277, 415: 0.337954125175428},
             417: {416: 0.211542835695277, 414: 0.341800057911993, 198: 0.209134539040814},
             418: {419: 0.181155911334295, 420: 0.266456826553609},
             419: {418: 0.181155911334295, 300: 0.59923151261921, 37: 0.239183531192535},
             420: {312: 0.452126381431572, 418: 0.266456826553609, 37: 0.192315798871929},
             421: {422: 0.442199030440124, 190: 0.25979985036771, 189: 0.482046359374213},
             422: {421: 0.442199030440124, 423: 0.221568093625154},
             423: {430: 0.422754618401456, 422: 0.221568093625154, 190: 0.377265302282295},
             424: {425: 0.295890229562201, 183: 0.125575412628426},
             425: {424: 0.295890229562201, 130: 0.0897414226733588, 132: 0.0706869008167966},
             426: {40: 0.302889642866584, 213: 0.399549918565484, 295: 0.0941467095096917},
             427: {42: 0.283267255175122, 54: 1.24430911240219},
             428: {318: 1.25429703457283, 303: 0.889797756796988},
             429: {64: 0.376342181781275}, 430: {340: 1.22322662146261, 423: 0.422754618401456},
             431: {60: 0.665844984513799, 53: 2.7137797862091, 55: 0.776626315846115},
             432: {122: 1.43020527231666},
             433: {198: 0.49474315599118, 199: 0.294839099076527},
             434: {252: 1.34212763913852, 364: 0.398444001040352, 366: 0.492017954601896},
             435: {265: 0.130296820988836, 390: 0.489759236904919}}
    parentlist1 = []
    distencelist1 = []
    for i in range(len(A) - 1):
        temporarydisset1 = []
        temporaryparset1 = []
        for index in range(len(A[i])):
            # kk = A[i][index][1]
            # newminute = B + (int(kk) // 10) * 10  # B 就是初始时间
            parent, distence = dijkstra(graph1, A[i][index][0])
            temporarydisset1.append(distence)
            temporaryparset1.append(parent)
        parentlist1.append(temporaryparset1)
        distencelist1.append(temporarydisset1)
        for index1 in range(len(A[i + 1])):
            comperlist1 = []
            for k in range(len(A[i])):
                comperlist1.append(temporarydisset1[k][A[i + 1][index1][0]] + A[i][k][1])
            A[i + 1][index1][1] = min(comperlist1)
            A[i + 1][index1][2] = comperlist1.index(min(comperlist1))
    # print(A[-1][0][1])
    startindex1 = A[-1][0][2]
    endpoint1 = [A[-1][0][0]]
    indexset = []
    indexset1 = []
    alldis = 0
    alldiscount = 1
    num = B
    roa = []
    for k in range(len(A) - 2, -1, -1):
        indexset.append(parentlist1[k][startindex1])
        indexset1.append(startindex1)
        endpoint1.append(A[k][startindex1][0])
        startindex1 = A[k][startindex1][2]
    # print(len(indexset), endpoint)
    for j in range(len(endpoint1) - 1):
        startpoint = endpoint1[j]
        vetrex = []
        while startpoint != None:
            vetrex.append(startpoint)
            startpoint = indexset[j][startpoint]
        # print(vetrex)
        for n in range(len(vetrex) - 1, 0, -1):
            for l in range(len(b)):
                if (b[l][0] == vetrex[n] and b[l][1] == vetrex[n - 1]) or (b[l][0] == vetrex[n - 1] and b[l][1] == vetrex[n]):
                    roa.append(l)
                    if alldis > alldiscount*10:
                        alldiscount = alldiscount+1
                        num = num + (alldiscount-1) * 10
                    else:
                        num = num
                    alldis = alldis + graph1[b[l][0]][b[l][1]] / C[num][l] * 60
                    # print(num, graph[b[l][0]][b[l][1]], C[num][l], alldis)
    indexset1.pop()
    # print(roa, indexset1, A[-1][0][1], alldis)
    return [roa, indexset1, [A[-1][0][1], alldis]]


def find_filename(path, A):   # 找出所有出租车名字
    fs = os.listdir(path)
    for f in fs:
        pathTmp = os.path.join(path, f)
        if os.path.isdir(pathTmp):
            find_filename(pathTmp, A)
        else:
            A.append((os.path.basename(pathTmp))[:7])
    return A


def taxiFee(A):
    if A <= 3.5:
        sumFee = 11
    elif A <= 8:
        sumFee = 11+(A-3.5)*2.5
    else:
        sumFee = 11+(A-3.5)*2.5+(A-8)*1.25
    return sumFee


def getDistance(A, B):
    lon1, lat1, lon2, lat2 = map(radians, [A[0], A[1], B[0], B[1]])
    dlon = lon2 - lon1
    dlat = lat2 - lat1
    a = sin(dlat / 2) ** 2 + cos(lat1) * cos(lat2) * sin(dlon / 2) ** 2
    c = 2 * asin(sqrt(a))
    r = 6371
    return c * r


def searchTaxi(A, B):
    mysql = DB()
    res_traj = mysql.get_mysql("select * from new_taxitraj201401%02d" % B + " where car_no = %s ", (A,))
    a1 = []  # 出租车状态
    a11 = []
    a2 = []  # 经过的路、、目前还没什么用
    a3 = []  # 上下车时间的list
    a4 = []
    a7 = dict()
    a6 = []
    a8 = []  # 每一点的经纬度
    a10 = []
    countShot = 0
    countMiddle = 0
    countLong = 0
    for re in res_traj:
        a1.append(re[4])
        a4.append(re[8])
        a2.append(re[9])
        a8.append([float(re[6]), float(re[5])])
    for i in range(len(a1)):
        if a1[i] == 1 and i == 0:
            # print("start:", i)
            a3.append(i)
            a11.append(a4[i])
        elif a1[i] == 1 and a1[i-1] == 0:
            # print("start:", i)
            a3.append(i)
            a11.append(a4[i])
        if a1[i] == 0 and i == 0:
            continue
        elif a1[i] == 0 and a1[i-1] == 1:
            # print("end:", i)
            a3.append(i-1)
            a11.append(a4[i-1])
    pp = list_of_groups(a3, 2)
    pp1 = list_of_groups(a11, 2)
    for qq, rex in enumerate(pp):
        a5 = []
        a9 = []
        sumDis = 0
        if len(rex) == 2:
            for j in range(rex[0], rex[1]):
                a5.append(a2[j])  # 每一条轨迹经过哪些路a5
                a9.append(a8[j])  # 没一条轨迹的具体坐标
            for kk in range(len(a9)-1):
                sumDis = sumDis + getDistance(a9[kk], a9[kk+1])
            a10.append(sumDis)
            # print("traj:", rex, "road:", a5)
            a6.append({"time": pp1[qq], "latlng": a9})
    a7['traj'] = a6
    #  计算每一条轨迹的费用以及平均费用 短途起步价以内3,5 中途3.5<x<=8, 长途x>8
    b1 = []
    b2 = []
    b3 = []
    f1 = []
    f2 = []
    f3 = []
    for index, dis in enumerate(a10):
        if dis <= 3.5:
            countShot = countShot + 1
            b1.append(index)
            f1.append(int(taxiFee(dis)))
        elif dis <= 8:
            countMiddle = countMiddle + 1
            b2.append(index)
            f2.append(int(taxiFee(dis)))
        else:
            countLong = countLong + 1
            b3.append(index)
            f3.append(int(taxiFee(dis)))
    if len(f1) == 0:
        av1 = 0
    else:
        av1 = int(sum(f1)/len(f1))
    if len(f2) == 0:
        av2 = 0
    else:
        av2 = int(sum(f2)/len(f2))
    if len(f3) == 0:
        av3 = 0
    else:
        av3 = int(sum(f3)/len(f3))
    # print([b1, b2, b3])
    a7["trip"] = {"catagory": [b1, b2, b3], "Number": [len(b1), len(b2), len(b3)], "Fee": [av1, av2, av3], "everyfee": [f1, f2, f3]}
    print(a7)
    return a7


def averageincome(A, B):
    mysql = DB()
    a1 = []
    b1 = []
    for k in range(24):
        a = []
        b = []
        result = mysql.get_mysql("SELECT * FROM avfee201401%02d" % A +" WHERE time_minute = %d" % k)
        for re in result:
            a.append(re[2])
        a1.append(int(sum(a) / len(a)))
        # print("%d点整体平均收入"% k, int(sum(a)/len(a)))
        result1 = mysql.get_mysql("SELECT * FROM avfee201401%02d" % A +" WHERE time_minute = %s AND taxi_id = %s", (k, B,))
        for re1 in result1:
            b.append(re1[2])
        b1.append(int(sum(b) / len(b)))
        # print("%d点浙C02678平均收入" % k, int(sum(b) / len(b)))
    lastdict = dict()
    for j in range(1, 679):
        aaa = []
        res = mysql.get_mysql("SELECT * FROM noloadrate201401%02d" % A + " WHERE road_id = %d" % j)
        for re in res:
            aaa.append(re[4])
        lastdict[j] = aaa
    roadset = []
    for j in range(0, 1440, 60):
        a = set()
        res = mysql.get_mysql("SELECT * FROM new_taxitraj201401%02d" % A + " WHERE car_no = %s AND time between %s and %s", (B, j, j + 60))
        for re in res:
            if re[9] != 0:
                a.add(re[9])
        if len(a) == 0:
            roadset.append([])
        else:
            roadset.append(list(a))
    print([[a1, b1], lastdict, roadset])
    return [[a1, b1], lastdict, roadset]


if __name__ == '__main__':
    st = time.time()
    # test8(1, 1)
    # test7(1)
    # test_3("0101")
    # test_4_2({'x': [1], 'y': 1})
    # test_5_1({"x": '浙CT5688', "y": 480, "z": 540, "k": 1})
    test_3_1({'x': '0101', 'y': 480, 'z': 540})
    ed = time.time()
    print(ed - st, 's', 'ok')
    pass